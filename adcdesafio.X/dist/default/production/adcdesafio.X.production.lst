

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu Sep 05 23:15:53 2019

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	smallconst
    41  000800                     __psmallconst:
    42                           	opt stack 0
    43  000800  00                 	db	0
    44  000801                     _tabela:
    45                           	opt stack 0
    46  000801  3F                 	db	63
    47  000802  06                 	db	6
    48  000803  5B                 	db	91
    49  000804  4F                 	db	79
    50  000805  66                 	db	102
    51  000806  6D                 	db	109
    52  000807  7C                 	db	124
    53  000808  07                 	db	7
    54  000809  7F                 	db	127
    55  00080A  67                 	db	103
    56  00080B                     __end_of_tabela:
    57                           	opt stack 0
    58  0000                     _TMR0	set	4054
    59  0000                     _ADCON0	set	4034
    60  0000                     _ADCON1	set	4033
    61  0000                     _ADCON2	set	4032
    62  0000                     _ADRESH	set	4036
    63  0000                     _ADRESL	set	4035
    64  0000                     _LATA	set	3977
    65  0000                     _LATB	set	3978
    66  0000                     _LATC	set	3979
    67  0000                     _LATD	set	3980
    68  0000                     _LATE	set	3981
    69  0000                     _PORTB	set	3969
    70  0000                     _T0CON	set	4053
    71  0000                     _TRISA	set	3986
    72  0000                     _TRISB	set	3987
    73  0000                     _TRISC	set	3988
    74  0000                     _TRISD	set	3989
    75  0000                     _TRISE	set	3990
    76  0000                     _ADON	set	32272
    77  0000                     _GIE	set	32663
    78  0000                     _GO_nDONE	set	32273
    79  0000                     _LATC7	set	31839
    80  0000                     _PSA	set	32427
    81  0000                     _T0CS	set	32429
    82  0000                     _T0IE	set	32661
    83  0000                     _T0IF	set	32658
    84  0000                     _TMR0IF	set	32658
    85  0000                     _TMR0ON	set	32431
    86  0000                     _VCFG0	set	32268
    87  0000                     _VCFG1	set	32269
    88                           
    89                           ; #config settings
    90  00080B  00                 	db	0	; dummy byte at the end
    91  0000                     
    92                           	psect	cinit
    93  000D64                     __pcinit:
    94                           	opt stack 0
    95  000D64                     start_initialization:
    96                           	opt stack 0
    97  000D64                     __initialization:
    98                           	opt stack 0
    99                           
   100                           ; Clear objects allocated to COMRAM (1 bytes)
   101  000D64  6A24               	clrf	__pbssCOMRAM& (0+255),c
   102  000D66                     end_of_initialization:
   103                           	opt stack 0
   104  000D66                     __end_of__initialization:
   105                           	opt stack 0
   106  000D66  9025               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   107  000D68  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   108  000D6A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   109  000D6C  6EF8               	movwf	tblptru,c
   110  000D6E  0E08               	movlw	high __Lsmallconst
   111  000D70  6EF7               	movwf	tblptrh,c
   112  000D72  0100               	movlb	0
   113  000D74  EFB7  F005         	goto	_main	;jump to C main() function
   114                           tblptru	equ	0xFF8
   115                           tblptrh	equ	0xFF7
   116                           
   117                           	psect	bssCOMRAM
   118  000024                     __pbssCOMRAM:
   119                           	opt stack 0
   120  000024                     _contador:
   121                           	opt stack 0
   122  000024                     	ds	1
   123                           tblptru	equ	0xFF8
   124                           tblptrh	equ	0xFF7
   125                           
   126                           	psect	cstackCOMRAM
   127  000001                     __pcstackCOMRAM:
   128                           	opt stack 0
   129  000001                     ??_ISR:
   130  000001                     
   131                           ; 2 bytes @ 0x0
   132  000001                     	ds	14
   133  00000F                     ?_adcRead:
   134                           	opt stack 0
   135  00000F                     ?___lwmod:
   136                           	opt stack 0
   137  00000F                     adcConfig@acqTime:
   138                           	opt stack 0
   139  00000F                     adcRead@resultFormat:
   140                           	opt stack 0
   141  00000F                     setOutputA@outputs:
   142                           	opt stack 0
   143  00000F                     setOutputC@outputs:
   144                           	opt stack 0
   145  00000F                     setOutputE@outputs:
   146                           	opt stack 0
   147  00000F                     setInputA@inputs:
   148                           	opt stack 0
   149  00000F                     output_lowA@outputs:
   150                           	opt stack 0
   151  00000F                     output_lowE@outputs:
   152                           	opt stack 0
   153  00000F                     output_highA@outputs:
   154                           	opt stack 0
   155  00000F                     output_highC@outputs:
   156                           	opt stack 0
   157  00000F                     output_highD@outputs:
   158                           	opt stack 0
   159  00000F                     output_highE@outputs:
   160                           	opt stack 0
   161  00000F                     configTimer0@prescalerValue:
   162                           	opt stack 0
   163  00000F                     ___lwmod@dividend:
   164                           	opt stack 0
   165                           
   166                           ; 2 bytes @ 0xE
   167  00000F                     	ds	1
   168  000010                     adcConfig@portConfig:
   169                           	opt stack 0
   170  000010                     printDigit1@valor:
   171                           	opt stack 0
   172  000010                     printDigit2@valor:
   173                           	opt stack 0
   174  000010                     printDigit3@valor:
   175                           	opt stack 0
   176  000010                     printDigit4@valor:
   177                           	opt stack 0
   178                           
   179                           ; 1 bytes @ 0xF
   180  000010                     	ds	1
   181  000011                     ??_adcRead:
   182  000011                     adcConfig@conversionRate:
   183                           	opt stack 0
   184  000011                     ___lwmod@divisor:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0x10
   188  000011                     	ds	2
   189  000013                     ___lwmod@counter:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0x12
   193  000013                     	ds	1
   194  000014                     ?___lwdiv:
   195                           	opt stack 0
   196  000014                     ___lwdiv@dividend:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0x13
   200  000014                     	ds	1
   201  000015                     adcRead@returnValue:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x14
   205  000015                     	ds	1
   206  000016                     ___lwdiv@divisor:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x15
   210  000016                     	ds	1
   211  000017                     adcRead@channel:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x16
   215  000017                     	ds	1
   216  000018                     ___lwdiv@quotient:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x17
   220  000018                     	ds	2
   221  00001A                     ___lwdiv@counter:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x19
   225  00001A                     	ds	1
   226  00001B                     printDisplays@valor:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0x1A
   230  00001B                     	ds	2
   231  00001D                     ??_printDisplays:
   232                           
   233                           ; 1 bytes @ 0x1C
   234  00001D                     	ds	1
   235  00001E                     _printDisplays$800:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x1D
   239  00001E                     	ds	2
   240  000020                     _printDisplays$799:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x1F
   244  000020                     	ds	2
   245  000022                     main@valor:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x21
   249  000022                     	ds	2
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 28 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;  valor           2   33[COMRAM] unsigned int 
   263 ;; Return value:  Size  Location     Type
   264 ;;                  2  202[None  ] int 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   272 ;;      Params:         0       0       0       0       0       0       0       0       0
   273 ;;      Locals:         2       0       0       0       0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0       0       0
   275 ;;      Totals:         2       0       0       0       0       0       0       0       0
   276 ;;Total ram usage:        2 bytes
   277 ;; Hardware stack levels required when called:    4
   278 ;; This function calls:
   279 ;;		_adcConfig
   280 ;;		_adcRead
   281 ;;		_configSevenSeg
   282 ;;		_configTimer0
   283 ;;		_desableTimer0ISR
   284 ;;		_enableTimer0ISR
   285 ;;		_output_highC
   286 ;;		_output_highD
   287 ;;		_printDisplays
   288 ;;		_resetTimer0
   289 ;;		_setInputA
   290 ;;		_setOutputC
   291 ;; This function is called by:
   292 ;;		Startup code after reset
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text0
   297  000B6E                     __ptext0:
   298                           	opt stack 0
   299  000B6E                     _main:
   300                           	opt stack 27
   301                           
   302                           ;main.c: 30: setOutputC(0b10000000);
   303                           
   304                           ;incstack = 0
   305  000B6E  0E80               	movlw	128
   306  000B70  ECC3  F006         	call	_setOutputC
   307                           
   308                           ;main.c: 31: output_highC(0b10000000);
   309  000B74  0E80               	movlw	128
   310  000B76  ECF1  F006         	call	_output_highC
   311                           
   312                           ;main.c: 33: setInputA(0b00000001);
   313  000B7A  0E01               	movlw	1
   314  000B7C  ECE1  F006         	call	_setInputA
   315                           
   316                           ;main.c: 34: output_highD(0b00000001|0b00000010|0b00000100|0b00001000|0b00010000|0b00100
      +                          000|0b01000000|0b10000000);
   317  000B80  0EFF               	movlw	255
   318  000B82  ECED  F006         	call	_output_highD
   319                           
   320                           ;main.c: 35: configTimer0(0b00000110);
   321  000B86  0E06               	movlw	6
   322  000B88  ECA7  F006         	call	_configTimer0
   323                           
   324                           ;main.c: 36: enableTimer0ISR();
   325  000B8C  ECF5  F006         	call	_enableTimer0ISR	;wreg free
   326                           
   327                           ;main.c: 37: resetTimer0();
   328  000B90  ECC8  F006         	call	_resetTimer0	;wreg free
   329                           
   330                           ;main.c: 38: GIE = 1;
   331  000B94  8EF2               	bsf	intcon,7,c	;volatile
   332                           
   333                           ;main.c: 40: adcConfig(0b00000001, 0b00011000, 0b00000000);
   334  000B96  0E18               	movlw	24
   335  000B98  6E0F               	movwf	adcConfig@acqTime,c
   336  000B9A  0E00               	movlw	0
   337  000B9C  6E10               	movwf	adcConfig@portConfig,c
   338  000B9E  0E01               	movlw	1
   339  000BA0  EC97  F006         	call	_adcConfig
   340                           
   341                           ;main.c: 41: configSevenSeg();
   342  000BA4  ECBC  F006         	call	_configSevenSeg	;wreg free
   343                           
   344                           ;main.c: 43: unsigned int valor = 0;
   345  000BA8  0E00               	movlw	0
   346  000BAA  6E23               	movwf	main@valor+1,c
   347  000BAC  0E00               	movlw	0
   348  000BAE  6E22               	movwf	main@valor,c
   349  000BB0                     l203:
   350                           
   351                           ;main.c: 46: valor = adcRead(0,0b10000000);
   352  000BB0  0E80               	movlw	128
   353  000BB2  6E0F               	movwf	adcRead@resultFormat,c
   354  000BB4  0E00               	movlw	0
   355  000BB6  EC26  F005         	call	_adcRead
   356  000BBA  C00F  F022         	movff	?_adcRead,main@valor
   357  000BBE  C010  F023         	movff	?_adcRead+1,main@valor+1
   358                           
   359                           ;main.c: 48: printDisplays(valor);
   360  000BC2  C022  F01B         	movff	main@valor,printDisplays@valor
   361  000BC6  C023  F01C         	movff	main@valor+1,printDisplays@valor+1
   362  000BCA  EC06  F004         	call	_printDisplays	;wreg free
   363                           
   364                           ;main.c: 49: if(valor > 512){
   365  000BCE  0422               	decf	main@valor,w,c
   366  000BD0  0E02               	movlw	2
   367  000BD2  5823               	subwfb	main@valor+1,w,c
   368  000BD4  A0D8               	btfss	status,0,c
   369  000BD6  D003               	goto	l1263
   370                           
   371                           ;main.c: 50: enableTimer0ISR();
   372  000BD8  ECF5  F006         	call	_enableTimer0ISR	;wreg free
   373                           
   374                           ;main.c: 51: }
   375  000BDC  D7E9               	goto	l203
   376  000BDE                     l1263:
   377                           
   378                           ;main.c: 52: else{
   379                           ;main.c: 53: desableTimer0ISR();
   380  000BDE  ECF8  F006         	call	_desableTimer0ISR	;wreg free
   381                           
   382                           ;main.c: 54: output_highC(0b10000000);
   383  000BE2  0E80               	movlw	128
   384  000BE4  ECF1  F006         	call	_output_highC
   385  000BE8  D7E3               	goto	l203
   386  000BEA                     __end_of_main:
   387                           	opt stack 0
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           intcon	equ	0xFF2
   391                           status	equ	0xFD8
   392                           
   393 ;; *************** function _setOutputC *****************
   394 ;; Defined at:
   395 ;;		line 21 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;  outputs         1    wreg     unsigned char 
   398 ;; Auto vars:     Size  Location     Type
   399 ;;  outputs         1   14[COMRAM] unsigned char 
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, status,2, status,0
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   409 ;;      Params:         0       0       0       0       0       0       0       0       0
   410 ;;      Locals:         1       0       0       0       0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0       0       0       0       0
   412 ;;      Totals:         1       0       0       0       0       0       0       0       0
   413 ;;Total ram usage:        1 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; Hardware stack levels required when called:    1
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text1
   424  000D86                     __ptext1:
   425                           	opt stack 0
   426  000D86                     _setOutputC:
   427                           	opt stack 29
   428                           
   429                           ;incstack = 0
   430                           ;setOutputC@outputs stored from wreg
   431  000D86  6E0F               	movwf	setOutputC@outputs,c
   432                           
   433                           ;configIO.c: 22: TRISC &= ~outputs;
   434  000D88  500F               	movf	setOutputC@outputs,w,c
   435  000D8A  0AFF               	xorlw	255
   436  000D8C  1694               	andwf	3988,f,c	;volatile
   437  000D8E  0012               	return		;funcret
   438  000D90                     __end_of_setOutputC:
   439                           	opt stack 0
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           intcon	equ	0xFF2
   443                           status	equ	0xFD8
   444                           
   445 ;; *************** function _setInputA *****************
   446 ;; Defined at:
   447 ;;		line 36 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;  inputs          1    wreg     unsigned char 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  inputs          1   14[COMRAM] unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, status,2, status,0
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   461 ;;      Params:         0       0       0       0       0       0       0       0       0
   462 ;;      Locals:         1       0       0       0       0       0       0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0
   464 ;;      Totals:         1       0       0       0       0       0       0       0       0
   465 ;;Total ram usage:        1 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; Hardware stack levels required when called:    1
   468 ;; This function calls:
   469 ;;		Nothing
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text2
   476  000DC2                     __ptext2:
   477                           	opt stack 0
   478  000DC2                     _setInputA:
   479                           	opt stack 29
   480                           
   481                           ;incstack = 0
   482                           ;setInputA@inputs stored from wreg
   483  000DC2  6E0F               	movwf	setInputA@inputs,c
   484                           
   485                           ;configIO.c: 37: TRISA|=inputs;
   486  000DC4  500F               	movf	setInputA@inputs,w,c
   487  000DC6  1292               	iorwf	3986,f,c	;volatile
   488  000DC8  0012               	return		;funcret
   489  000DCA                     __end_of_setInputA:
   490                           	opt stack 0
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           intcon	equ	0xFF2
   494                           status	equ	0xFD8
   495                           
   496 ;; *************** function _resetTimer0 *****************
   497 ;; Defined at:
   498 ;;		line 30 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/timer0lib.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   512 ;;      Params:         0       0       0       0       0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0       0       0
   515 ;;      Totals:         0       0       0       0       0       0       0       0       0
   516 ;;Total ram usage:        0 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; Hardware stack levels required when called:    1
   519 ;; This function calls:
   520 ;;		Nothing
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text3
   527  000D90                     __ptext3:
   528                           	opt stack 0
   529  000D90                     _resetTimer0:
   530                           	opt stack 29
   531                           
   532                           ;timer0lib.c: 31: TMR0=0x00;
   533                           
   534                           ;incstack = 0
   535  000D90  0E00               	movlw	0
   536  000D92  6ED7               	movwf	4055,c	;volatile
   537  000D94  0E00               	movlw	0
   538  000D96  6ED6               	movwf	4054,c	;volatile
   539  000D98  0012               	return		;funcret
   540  000D9A                     __end_of_resetTimer0:
   541                           	opt stack 0
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           intcon	equ	0xFF2
   545                           status	equ	0xFD8
   546                           
   547 ;; *************** function _printDisplays *****************
   548 ;; Defined at:
   549 ;;		line 42 in file "sevenSeg.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;  valor           2   26[COMRAM] unsigned int 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   563 ;;      Params:         2       0       0       0       0       0       0       0       0
   564 ;;      Locals:         4       0       0       0       0       0       0       0       0
   565 ;;      Temps:          1       0       0       0       0       0       0       0       0
   566 ;;      Totals:         7       0       0       0       0       0       0       0       0
   567 ;;Total ram usage:        7 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    3
   570 ;; This function calls:
   571 ;;		___lwdiv
   572 ;;		___lwmod
   573 ;;		_printDigit1
   574 ;;		_printDigit2
   575 ;;		_printDigit3
   576 ;;		_printDigit4
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text4
   583  00080C                     __ptext4:
   584                           	opt stack 0
   585  00080C                     _printDisplays:
   586                           	opt stack 27
   587                           
   588                           ;sevenSeg.c: 43: if(valor<10){
   589                           
   590                           ;incstack = 0
   591  00080C  501C               	movf	printDisplays@valor+1,w,c
   592  00080E  E108               	bnz	l1201
   593  000810  0E0A               	movlw	10
   594  000812  5C1B               	subwf	printDisplays@valor,w,c
   595  000814  B0D8               	btfsc	status,0,c
   596  000816  D004               	goto	l1201
   597                           
   598                           ;sevenSeg.c: 44: printDigit1((unsigned char)valor);
   599  000818  501B               	movf	printDisplays@valor,w,c
   600  00081A  EC81  F006         	call	_printDigit1
   601                           
   602                           ;sevenSeg.c: 45: }
   603  00081E  0012               	return	
   604  000820                     l1201:
   605                           
   606                           ;sevenSeg.c: 46: else if(valor>=10 && valor<100){
   607  000820  501C               	movf	printDisplays@valor+1,w,c
   608  000822  E104               	bnz	u350
   609  000824  0E0A               	movlw	10
   610  000826  5C1B               	subwf	printDisplays@valor,w,c
   611  000828  A0D8               	btfss	status,0,c
   612  00082A  D028               	goto	l1211
   613  00082C                     u350:
   614  00082C  501C               	movf	printDisplays@valor+1,w,c
   615  00082E  E126               	bnz	l1211
   616  000830  0E64               	movlw	100
   617  000832  5C1B               	subwf	printDisplays@valor,w,c
   618  000834  B0D8               	btfsc	status,0,c
   619  000836  D022               	goto	l1211
   620                           
   621                           ;sevenSeg.c: 47: printDigit1((unsigned char)(valor%10));
   622  000838  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   623  00083C  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   624  000840  0E00               	movlw	0
   625  000842  6E12               	movwf	___lwmod@divisor+1,c
   626  000844  0E0A               	movlw	10
   627  000846  6E11               	movwf	___lwmod@divisor,c
   628  000848  EC1E  F006         	call	___lwmod	;wreg free
   629  00084C  500F               	movf	?___lwmod,w,c
   630  00084E  EC81  F006         	call	_printDigit1
   631                           
   632                           ;sevenSeg.c: 48: _delay((unsigned long)((5)*(8000000/4000.0)));
   633  000852  0E0D               	movlw	13
   634  000854  6E1D               	movwf	??_printDisplays& (0+255),c
   635  000856  0EFC               	movlw	252
   636  000858                     u417:
   637  000858  2EE8               	decfsz	wreg,f,c
   638  00085A  D7FE               	goto	u417
   639  00085C  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   640  00085E  D7FC               	goto	u417
   641                           
   642                           ;sevenSeg.c: 49: printDigit2((unsigned char)(valor/10));
   643  000860  C01B  F014         	movff	printDisplays@valor,___lwdiv@dividend
   644  000864  C01C  F015         	movff	printDisplays@valor+1,___lwdiv@dividend+1
   645  000868  0E00               	movlw	0
   646  00086A  6E17               	movwf	___lwdiv@divisor+1,c
   647  00086C  0E0A               	movlw	10
   648  00086E  6E16               	movwf	___lwdiv@divisor,c
   649  000870  ECF5  F005         	call	___lwdiv	;wreg free
   650  000874  5014               	movf	?___lwdiv,w,c
   651  000876  EC6B  F006         	call	_printDigit2
   652                           
   653                           ;sevenSeg.c: 50: }
   654  00087A  0012               	return	
   655  00087C                     l1211:
   656                           
   657                           ;sevenSeg.c: 51: else if(valor>=100 && valor <1000){
   658  00087C  501C               	movf	printDisplays@valor+1,w,c
   659  00087E  E104               	bnz	u370
   660  000880  0E64               	movlw	100
   661  000882  5C1B               	subwf	printDisplays@valor,w,c
   662  000884  A0D8               	btfss	status,0,c
   663  000886  D054               	goto	l1227
   664  000888                     u370:
   665  000888  0EE8               	movlw	232
   666  00088A  5C1B               	subwf	printDisplays@valor,w,c
   667  00088C  0E03               	movlw	3
   668  00088E  581C               	subwfb	printDisplays@valor+1,w,c
   669  000890  B0D8               	btfsc	status,0,c
   670  000892  D04E               	goto	l1227
   671                           
   672                           ;sevenSeg.c: 52: printDigit1((unsigned char)((valor%100)%10));
   673  000894  0E00               	movlw	0
   674  000896  6E12               	movwf	___lwmod@divisor+1,c
   675  000898  0E64               	movlw	100
   676  00089A  6E11               	movwf	___lwmod@divisor,c
   677  00089C  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   678  0008A0  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   679  0008A4  EC1E  F006         	call	___lwmod	;wreg free
   680  0008A8  C00F  F020         	movff	?___lwmod,_printDisplays$799
   681  0008AC  C010  F021         	movff	?___lwmod+1,_printDisplays$799+1
   682                           
   683                           ;sevenSeg.c: 52: printDigit1((unsigned char)((valor%100)%10));
   684  0008B0  C020  F00F         	movff	_printDisplays$799,___lwmod@dividend
   685  0008B4  C021  F010         	movff	_printDisplays$799+1,___lwmod@dividend+1
   686  0008B8  0E00               	movlw	0
   687  0008BA  6E12               	movwf	___lwmod@divisor+1,c
   688  0008BC  0E0A               	movlw	10
   689  0008BE  6E11               	movwf	___lwmod@divisor,c
   690  0008C0  EC1E  F006         	call	___lwmod	;wreg free
   691  0008C4  500F               	movf	?___lwmod,w,c
   692  0008C6  EC81  F006         	call	_printDigit1
   693                           
   694                           ;sevenSeg.c: 53: _delay((unsigned long)((5)*(8000000/4000.0)));
   695  0008CA  0E0D               	movlw	13
   696  0008CC  6E1D               	movwf	??_printDisplays& (0+255),c
   697  0008CE  0EFC               	movlw	252
   698  0008D0                     u427:
   699  0008D0  2EE8               	decfsz	wreg,f,c
   700  0008D2  D7FE               	goto	u427
   701  0008D4  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   702  0008D6  D7FC               	goto	u427
   703                           
   704                           ;sevenSeg.c: 54: printDigit2((unsigned char)((valor%100)/10));
   705  0008D8  0E00               	movlw	0
   706  0008DA  6E12               	movwf	___lwmod@divisor+1,c
   707  0008DC  0E64               	movlw	100
   708  0008DE  6E11               	movwf	___lwmod@divisor,c
   709  0008E0  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   710  0008E4  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   711  0008E8  EC1E  F006         	call	___lwmod	;wreg free
   712  0008EC  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   713  0008F0  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   714  0008F4  0E00               	movlw	0
   715  0008F6  6E17               	movwf	___lwdiv@divisor+1,c
   716  0008F8  0E0A               	movlw	10
   717  0008FA  6E16               	movwf	___lwdiv@divisor,c
   718  0008FC  ECF5  F005         	call	___lwdiv	;wreg free
   719  000900  5014               	movf	?___lwdiv,w,c
   720  000902  EC6B  F006         	call	_printDigit2
   721                           
   722                           ;sevenSeg.c: 55: _delay((unsigned long)((5)*(8000000/4000.0)));
   723  000906  0E0D               	movlw	13
   724  000908  6E1D               	movwf	??_printDisplays& (0+255),c
   725  00090A  0EFC               	movlw	252
   726  00090C                     u437:
   727  00090C  2EE8               	decfsz	wreg,f,c
   728  00090E  D7FE               	goto	u437
   729  000910  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   730  000912  D7FC               	goto	u437
   731                           
   732                           ;sevenSeg.c: 56: printDigit3((unsigned char)((valor/100)));
   733  000914  C01B  F014         	movff	printDisplays@valor,___lwdiv@dividend
   734  000918  C01C  F015         	movff	printDisplays@valor+1,___lwdiv@dividend+1
   735  00091C  0E00               	movlw	0
   736  00091E  6E17               	movwf	___lwdiv@divisor+1,c
   737  000920  0E64               	movlw	100
   738  000922  6E16               	movwf	___lwdiv@divisor,c
   739  000924  ECF5  F005         	call	___lwdiv	;wreg free
   740  000928  5014               	movf	?___lwdiv,w,c
   741  00092A  EC55  F006         	call	_printDigit3
   742                           
   743                           ;sevenSeg.c: 57: }
   744  00092E  0012               	return	
   745  000930                     l1227:
   746                           
   747                           ;sevenSeg.c: 58: else if(valor>=1000){
   748  000930  0EE8               	movlw	232
   749  000932  5C1B               	subwf	printDisplays@valor,w,c
   750  000934  0E03               	movlw	3
   751  000936  581C               	subwfb	printDisplays@valor+1,w,c
   752  000938  A0D8               	btfss	status,0,c
   753  00093A  0012               	return	
   754                           
   755                           ;sevenSeg.c: 59: printDigit1((unsigned char)(((valor%1000)%100)%10));
   756  00093C  0E03               	movlw	3
   757  00093E  6E12               	movwf	___lwmod@divisor+1,c
   758  000940  0EE8               	movlw	232
   759  000942  6E11               	movwf	___lwmod@divisor,c
   760  000944  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   761  000948  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   762  00094C  EC1E  F006         	call	___lwmod	;wreg free
   763  000950  C00F  F020         	movff	?___lwmod,_printDisplays$799
   764  000954  C010  F021         	movff	?___lwmod+1,_printDisplays$799+1
   765                           
   766                           ;sevenSeg.c: 59: printDigit1((unsigned char)(((valor%1000)%100)%10));
   767  000958  0E00               	movlw	0
   768  00095A  6E12               	movwf	___lwmod@divisor+1,c
   769  00095C  0E64               	movlw	100
   770  00095E  6E11               	movwf	___lwmod@divisor,c
   771  000960  C020  F00F         	movff	_printDisplays$799,___lwmod@dividend
   772  000964  C021  F010         	movff	_printDisplays$799+1,___lwmod@dividend+1
   773  000968  EC1E  F006         	call	___lwmod	;wreg free
   774  00096C  C00F  F01E         	movff	?___lwmod,_printDisplays$800
   775  000970  C010  F01F         	movff	?___lwmod+1,_printDisplays$800+1
   776                           
   777                           ;sevenSeg.c: 59: printDigit1((unsigned char)(((valor%1000)%100)%10));
   778  000974  C01E  F00F         	movff	_printDisplays$800,___lwmod@dividend
   779  000978  C01F  F010         	movff	_printDisplays$800+1,___lwmod@dividend+1
   780  00097C  0E00               	movlw	0
   781  00097E  6E12               	movwf	___lwmod@divisor+1,c
   782  000980  0E0A               	movlw	10
   783  000982  6E11               	movwf	___lwmod@divisor,c
   784  000984  EC1E  F006         	call	___lwmod	;wreg free
   785  000988  500F               	movf	?___lwmod,w,c
   786  00098A  EC81  F006         	call	_printDigit1
   787                           
   788                           ;sevenSeg.c: 60: _delay((unsigned long)((5)*(8000000/4000.0)));
   789  00098E  0E0D               	movlw	13
   790  000990  6E1D               	movwf	??_printDisplays& (0+255),c
   791  000992  0EFC               	movlw	252
   792  000994                     u447:
   793  000994  2EE8               	decfsz	wreg,f,c
   794  000996  D7FE               	goto	u447
   795  000998  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   796  00099A  D7FC               	goto	u447
   797                           
   798                           ;sevenSeg.c: 61: printDigit2((unsigned char)(((valor%1000)%100)/10));
   799  00099C  0E03               	movlw	3
   800  00099E  6E12               	movwf	___lwmod@divisor+1,c
   801  0009A0  0EE8               	movlw	232
   802  0009A2  6E11               	movwf	___lwmod@divisor,c
   803  0009A4  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   804  0009A8  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   805  0009AC  EC1E  F006         	call	___lwmod	;wreg free
   806  0009B0  C00F  F020         	movff	?___lwmod,_printDisplays$799
   807  0009B4  C010  F021         	movff	?___lwmod+1,_printDisplays$799+1
   808                           
   809                           ;sevenSeg.c: 61: printDigit2((unsigned char)(((valor%1000)%100)/10));
   810  0009B8  0E00               	movlw	0
   811  0009BA  6E12               	movwf	___lwmod@divisor+1,c
   812  0009BC  0E64               	movlw	100
   813  0009BE  6E11               	movwf	___lwmod@divisor,c
   814  0009C0  C020  F00F         	movff	_printDisplays$799,___lwmod@dividend
   815  0009C4  C021  F010         	movff	_printDisplays$799+1,___lwmod@dividend+1
   816  0009C8  EC1E  F006         	call	___lwmod	;wreg free
   817  0009CC  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   818  0009D0  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   819  0009D4  0E00               	movlw	0
   820  0009D6  6E17               	movwf	___lwdiv@divisor+1,c
   821  0009D8  0E0A               	movlw	10
   822  0009DA  6E16               	movwf	___lwdiv@divisor,c
   823  0009DC  ECF5  F005         	call	___lwdiv	;wreg free
   824  0009E0  5014               	movf	?___lwdiv,w,c
   825  0009E2  EC6B  F006         	call	_printDigit2
   826                           
   827                           ;sevenSeg.c: 62: _delay((unsigned long)((5)*(8000000/4000.0)));
   828  0009E6  0E0D               	movlw	13
   829  0009E8  6E1D               	movwf	??_printDisplays& (0+255),c
   830  0009EA  0EFC               	movlw	252
   831  0009EC                     u457:
   832  0009EC  2EE8               	decfsz	wreg,f,c
   833  0009EE  D7FE               	goto	u457
   834  0009F0  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   835  0009F2  D7FC               	goto	u457
   836                           
   837                           ;sevenSeg.c: 63: printDigit3((unsigned char)(((valor%1000)/100)));
   838  0009F4  0E03               	movlw	3
   839  0009F6  6E12               	movwf	___lwmod@divisor+1,c
   840  0009F8  0EE8               	movlw	232
   841  0009FA  6E11               	movwf	___lwmod@divisor,c
   842  0009FC  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   843  000A00  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   844  000A04  EC1E  F006         	call	___lwmod	;wreg free
   845  000A08  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   846  000A0C  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   847  000A10  0E00               	movlw	0
   848  000A12  6E17               	movwf	___lwdiv@divisor+1,c
   849  000A14  0E64               	movlw	100
   850  000A16  6E16               	movwf	___lwdiv@divisor,c
   851  000A18  ECF5  F005         	call	___lwdiv	;wreg free
   852  000A1C  5014               	movf	?___lwdiv,w,c
   853  000A1E  EC55  F006         	call	_printDigit3
   854                           
   855                           ;sevenSeg.c: 64: _delay((unsigned long)((5)*(8000000/4000.0)));
   856  000A22  0E0D               	movlw	13
   857  000A24  6E1D               	movwf	??_printDisplays& (0+255),c
   858  000A26  0EFC               	movlw	252
   859  000A28                     u467:
   860  000A28  2EE8               	decfsz	wreg,f,c
   861  000A2A  D7FE               	goto	u467
   862  000A2C  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   863  000A2E  D7FC               	goto	u467
   864                           
   865                           ;sevenSeg.c: 65: printDigit4((unsigned char)(valor/1000));
   866  000A30  C01B  F014         	movff	printDisplays@valor,___lwdiv@dividend
   867  000A34  C01C  F015         	movff	printDisplays@valor+1,___lwdiv@dividend+1
   868  000A38  0E03               	movlw	3
   869  000A3A  6E17               	movwf	___lwdiv@divisor+1,c
   870  000A3C  0EE8               	movlw	232
   871  000A3E  6E16               	movwf	___lwdiv@divisor,c
   872  000A40  ECF5  F005         	call	___lwdiv	;wreg free
   873  000A44  5014               	movf	?___lwdiv,w,c
   874  000A46  EC3F  F006         	call	_printDigit4
   875  000A4A  0012               	return	
   876  000A4C                     __end_of_printDisplays:
   877                           	opt stack 0
   878                           tblptru	equ	0xFF8
   879                           tblptrh	equ	0xFF7
   880                           intcon	equ	0xFF2
   881                           wreg	equ	0xFE8
   882                           status	equ	0xFD8
   883                           
   884 ;; *************** function _printDigit4 *****************
   885 ;; Defined at:
   886 ;;		line 32 in file "sevenSeg.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  valor           1    wreg     unsigned char 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  valor           1   15[COMRAM] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   900 ;;      Params:         0       0       0       0       0       0       0       0       0
   901 ;;      Locals:         1       0       0       0       0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0
   903 ;;      Totals:         1       0       0       0       0       0       0       0       0
   904 ;;Total ram usage:        1 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    2
   907 ;; This function calls:
   908 ;;		_output_highE
   909 ;;		_output_lowA
   910 ;;		_output_lowE
   911 ;; This function is called by:
   912 ;;		_printDisplays
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text5
   917  000C7E                     __ptext5:
   918                           	opt stack 0
   919  000C7E                     _printDigit4:
   920                           	opt stack 27
   921                           
   922                           ;incstack = 0
   923                           ;printDigit4@valor stored from wreg
   924  000C7E  6E10               	movwf	printDigit4@valor,c
   925                           
   926                           ;sevenSeg.c: 33: output_lowA(0b00100000|0b00000100);
   927  000C80  0E24               	movlw	36
   928  000C82  ECD2  F006         	call	_output_lowA
   929                           
   930                           ;sevenSeg.c: 34: output_lowE(0b00000001);
   931  000C86  0E01               	movlw	1
   932  000C88  ECCD  F006         	call	_output_lowE
   933                           
   934                           ;sevenSeg.c: 35: output_highE(0b00000100);
   935  000C8C  0E04               	movlw	4
   936  000C8E  ECE5  F006         	call	_output_highE
   937                           
   938                           ;sevenSeg.c: 36: LATD=tabela[valor];
   939  000C92  5010               	movf	printDigit4@valor,w,c
   940  000C94  0D01               	mullw	1
   941  000C96  0E01               	movlw	low _tabela
   942  000C98  24F3               	addwf	prodl,w,c
   943  000C9A  6EF6               	movwf	tblptrl,c
   944  000C9C  0E08               	movlw	high _tabela
   945  000C9E  20F4               	addwfc	prodh,w,c
   946  000CA0  6EF7               	movwf	tblptrh,c
   947  000CA2                     	if	0	;There are less than 3 active tblptr bytes
   948  000CA2                     	endif
   949  000CA2  0008               	tblrd		*
   950  000CA4  CFF5 FF8C          	movff	tablat,3980	;volatile
   951  000CA8  0012               	return		;funcret
   952  000CAA                     __end_of_printDigit4:
   953                           	opt stack 0
   954                           tblptru	equ	0xFF8
   955                           tblptrh	equ	0xFF7
   956                           tblptrl	equ	0xFF6
   957                           tablat	equ	0xFF5
   958                           prodh	equ	0xFF4
   959                           prodl	equ	0xFF3
   960                           intcon	equ	0xFF2
   961                           wreg	equ	0xFE8
   962                           status	equ	0xFD8
   963                           
   964 ;; *************** function _printDigit3 *****************
   965 ;; Defined at:
   966 ;;		line 26 in file "sevenSeg.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  valor           1    wreg     unsigned char 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  valor           1   15[COMRAM] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   980 ;;      Params:         0       0       0       0       0       0       0       0       0
   981 ;;      Locals:         1       0       0       0       0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0
   983 ;;      Totals:         1       0       0       0       0       0       0       0       0
   984 ;;Total ram usage:        1 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:    2
   987 ;; This function calls:
   988 ;;		_output_highE
   989 ;;		_output_lowA
   990 ;;		_output_lowE
   991 ;; This function is called by:
   992 ;;		_printDisplays
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text6
   997  000CAA                     __ptext6:
   998                           	opt stack 0
   999  000CAA                     _printDigit3:
  1000                           	opt stack 27
  1001                           
  1002                           ;incstack = 0
  1003                           ;printDigit3@valor stored from wreg
  1004  000CAA  6E10               	movwf	printDigit3@valor,c
  1005                           
  1006                           ;sevenSeg.c: 27: output_lowA(0b00100000|0b00000100);
  1007  000CAC  0E24               	movlw	36
  1008  000CAE  ECD2  F006         	call	_output_lowA
  1009                           
  1010                           ;sevenSeg.c: 28: output_highE(0b00000001);
  1011  000CB2  0E01               	movlw	1
  1012  000CB4  ECE5  F006         	call	_output_highE
  1013                           
  1014                           ;sevenSeg.c: 29: output_lowE(0b00000100);
  1015  000CB8  0E04               	movlw	4
  1016  000CBA  ECCD  F006         	call	_output_lowE
  1017                           
  1018                           ;sevenSeg.c: 30: LATD=tabela[valor];
  1019  000CBE  5010               	movf	printDigit3@valor,w,c
  1020  000CC0  0D01               	mullw	1
  1021  000CC2  0E01               	movlw	low _tabela
  1022  000CC4  24F3               	addwf	prodl,w,c
  1023  000CC6  6EF6               	movwf	tblptrl,c
  1024  000CC8  0E08               	movlw	high _tabela
  1025  000CCA  20F4               	addwfc	prodh,w,c
  1026  000CCC  6EF7               	movwf	tblptrh,c
  1027  000CCE                     	if	0	;There are less than 3 active tblptr bytes
  1028  000CCE                     	endif
  1029  000CCE  0008               	tblrd		*
  1030  000CD0  CFF5 FF8C          	movff	tablat,3980	;volatile
  1031  000CD4  0012               	return		;funcret
  1032  000CD6                     __end_of_printDigit3:
  1033                           	opt stack 0
  1034                           tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           prodh	equ	0xFF4
  1039                           prodl	equ	0xFF3
  1040                           intcon	equ	0xFF2
  1041                           wreg	equ	0xFE8
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function _output_highE *****************
  1045 ;; Defined at:
  1046 ;;		line 80 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  outputs         1    wreg     unsigned char 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  outputs         1   14[COMRAM] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1060 ;;      Params:         0       0       0       0       0       0       0       0       0
  1061 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1063 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1064 ;;Total ram usage:        1 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    1
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_printDigit3
  1071 ;;		_printDigit4
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text7
  1076  000DCA                     __ptext7:
  1077                           	opt stack 0
  1078  000DCA                     _output_highE:
  1079                           	opt stack 27
  1080                           
  1081                           ;incstack = 0
  1082                           ;output_highE@outputs stored from wreg
  1083  000DCA  6E0F               	movwf	output_highE@outputs,c
  1084                           
  1085                           ;configIO.c: 81: LATE |= outputs;
  1086  000DCC  500F               	movf	output_highE@outputs,w,c
  1087  000DCE  128D               	iorwf	3981,f,c	;volatile
  1088  000DD0  0012               	return		;funcret
  1089  000DD2                     __end_of_output_highE:
  1090                           	opt stack 0
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           prodh	equ	0xFF4
  1096                           prodl	equ	0xFF3
  1097                           intcon	equ	0xFF2
  1098                           wreg	equ	0xFE8
  1099                           status	equ	0xFD8
  1100                           
  1101 ;; *************** function _printDigit2 *****************
  1102 ;; Defined at:
  1103 ;;		line 20 in file "sevenSeg.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  valor           1    wreg     unsigned char 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  valor           1   15[COMRAM] unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0
  1118 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1120 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1121 ;;Total ram usage:        1 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    2
  1124 ;; This function calls:
  1125 ;;		_output_highA
  1126 ;;		_output_lowA
  1127 ;;		_output_lowE
  1128 ;; This function is called by:
  1129 ;;		_printDisplays
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text8
  1134  000CD6                     __ptext8:
  1135                           	opt stack 0
  1136  000CD6                     _printDigit2:
  1137                           	opt stack 27
  1138                           
  1139                           ;incstack = 0
  1140                           ;printDigit2@valor stored from wreg
  1141  000CD6  6E10               	movwf	printDigit2@valor,c
  1142                           
  1143                           ;sevenSeg.c: 21: output_lowA(0b00100000);
  1144  000CD8  0E20               	movlw	32
  1145  000CDA  ECD2  F006         	call	_output_lowA
  1146                           
  1147                           ;sevenSeg.c: 22: output_highA(0b00000100);
  1148  000CDE  0E04               	movlw	4
  1149  000CE0  ECE9  F006         	call	_output_highA
  1150                           
  1151                           ;sevenSeg.c: 23: output_lowE(0b00000001|0b00000100);
  1152  000CE4  0E05               	movlw	5
  1153  000CE6  ECCD  F006         	call	_output_lowE
  1154                           
  1155                           ;sevenSeg.c: 24: LATD=tabela[valor];
  1156  000CEA  5010               	movf	printDigit2@valor,w,c
  1157  000CEC  0D01               	mullw	1
  1158  000CEE  0E01               	movlw	low _tabela
  1159  000CF0  24F3               	addwf	prodl,w,c
  1160  000CF2  6EF6               	movwf	tblptrl,c
  1161  000CF4  0E08               	movlw	high _tabela
  1162  000CF6  20F4               	addwfc	prodh,w,c
  1163  000CF8  6EF7               	movwf	tblptrh,c
  1164  000CFA                     	if	0	;There are less than 3 active tblptr bytes
  1165  000CFA                     	endif
  1166  000CFA  0008               	tblrd		*
  1167  000CFC  CFF5 FF8C          	movff	tablat,3980	;volatile
  1168  000D00  0012               	return		;funcret
  1169  000D02                     __end_of_printDigit2:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           prodh	equ	0xFF4
  1176                           prodl	equ	0xFF3
  1177                           intcon	equ	0xFF2
  1178                           wreg	equ	0xFE8
  1179                           status	equ	0xFD8
  1180                           
  1181 ;; *************** function _printDigit1 *****************
  1182 ;; Defined at:
  1183 ;;		line 13 in file "sevenSeg.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  valor           1    wreg     unsigned char 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  valor           1   15[COMRAM] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1197 ;;      Params:         0       0       0       0       0       0       0       0       0
  1198 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1200 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1201 ;;Total ram usage:        1 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    2
  1204 ;; This function calls:
  1205 ;;		_output_highA
  1206 ;;		_output_lowA
  1207 ;;		_output_lowE
  1208 ;; This function is called by:
  1209 ;;		_printDisplays
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text9
  1214  000D02                     __ptext9:
  1215                           	opt stack 0
  1216  000D02                     _printDigit1:
  1217                           	opt stack 27
  1218                           
  1219                           ;incstack = 0
  1220                           ;printDigit1@valor stored from wreg
  1221  000D02  6E10               	movwf	printDigit1@valor,c
  1222                           
  1223                           ;sevenSeg.c: 14: output_highA(0b00100000);
  1224  000D04  0E20               	movlw	32
  1225  000D06  ECE9  F006         	call	_output_highA
  1226                           
  1227                           ;sevenSeg.c: 15: output_lowA(0b00000100);
  1228  000D0A  0E04               	movlw	4
  1229  000D0C  ECD2  F006         	call	_output_lowA
  1230                           
  1231                           ;sevenSeg.c: 16: output_lowE(0b00000001|0b00000100);
  1232  000D10  0E05               	movlw	5
  1233  000D12  ECCD  F006         	call	_output_lowE
  1234                           
  1235                           ;sevenSeg.c: 17: LATD=tabela[valor];
  1236  000D16  5010               	movf	printDigit1@valor,w,c
  1237  000D18  0D01               	mullw	1
  1238  000D1A  0E01               	movlw	low _tabela
  1239  000D1C  24F3               	addwf	prodl,w,c
  1240  000D1E  6EF6               	movwf	tblptrl,c
  1241  000D20  0E08               	movlw	high _tabela
  1242  000D22  20F4               	addwfc	prodh,w,c
  1243  000D24  6EF7               	movwf	tblptrh,c
  1244  000D26                     	if	0	;There are less than 3 active tblptr bytes
  1245  000D26                     	endif
  1246  000D26  0008               	tblrd		*
  1247  000D28  CFF5 FF8C          	movff	tablat,3980	;volatile
  1248  000D2C  0012               	return		;funcret
  1249  000D2E                     __end_of_printDigit1:
  1250                           	opt stack 0
  1251                           tblptru	equ	0xFF8
  1252                           tblptrh	equ	0xFF7
  1253                           tblptrl	equ	0xFF6
  1254                           tablat	equ	0xFF5
  1255                           prodh	equ	0xFF4
  1256                           prodl	equ	0xFF3
  1257                           intcon	equ	0xFF2
  1258                           wreg	equ	0xFE8
  1259                           status	equ	0xFD8
  1260                           
  1261 ;; *************** function _output_lowE *****************
  1262 ;; Defined at:
  1263 ;;		line 64 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  outputs         1    wreg     unsigned char 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  outputs         1   14[COMRAM] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1277 ;;      Params:         0       0       0       0       0       0       0       0       0
  1278 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1280 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1281 ;;Total ram usage:        1 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    1
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_printDigit1
  1288 ;;		_printDigit2
  1289 ;;		_printDigit3
  1290 ;;		_printDigit4
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text10
  1295  000D9A                     __ptext10:
  1296                           	opt stack 0
  1297  000D9A                     _output_lowE:
  1298                           	opt stack 27
  1299                           
  1300                           ;incstack = 0
  1301                           ;output_lowE@outputs stored from wreg
  1302  000D9A  6E0F               	movwf	output_lowE@outputs,c
  1303                           
  1304                           ;configIO.c: 65: LATE&=~outputs;
  1305  000D9C  500F               	movf	output_lowE@outputs,w,c
  1306  000D9E  0AFF               	xorlw	255
  1307  000DA0  168D               	andwf	3981,f,c	;volatile
  1308  000DA2  0012               	return		;funcret
  1309  000DA4                     __end_of_output_lowE:
  1310                           	opt stack 0
  1311                           tblptru	equ	0xFF8
  1312                           tblptrh	equ	0xFF7
  1313                           tblptrl	equ	0xFF6
  1314                           tablat	equ	0xFF5
  1315                           prodh	equ	0xFF4
  1316                           prodl	equ	0xFF3
  1317                           intcon	equ	0xFF2
  1318                           wreg	equ	0xFE8
  1319                           status	equ	0xFD8
  1320                           
  1321 ;; *************** function _output_lowA *****************
  1322 ;; Defined at:
  1323 ;;		line 52 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  outputs         1    wreg     unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  outputs         1   14[COMRAM] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0
  1338 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1340 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1341 ;;Total ram usage:        1 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    1
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_printDigit1
  1348 ;;		_printDigit2
  1349 ;;		_printDigit3
  1350 ;;		_printDigit4
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text11
  1355  000DA4                     __ptext11:
  1356                           	opt stack 0
  1357  000DA4                     _output_lowA:
  1358                           	opt stack 27
  1359                           
  1360                           ;incstack = 0
  1361                           ;output_lowA@outputs stored from wreg
  1362  000DA4  6E0F               	movwf	output_lowA@outputs,c
  1363                           
  1364                           ;configIO.c: 53: LATA &= ~outputs;
  1365  000DA6  500F               	movf	output_lowA@outputs,w,c
  1366  000DA8  0AFF               	xorlw	255
  1367  000DAA  1689               	andwf	3977,f,c	;volatile
  1368  000DAC  0012               	return		;funcret
  1369  000DAE                     __end_of_output_lowA:
  1370                           	opt stack 0
  1371                           tblptru	equ	0xFF8
  1372                           tblptrh	equ	0xFF7
  1373                           tblptrl	equ	0xFF6
  1374                           tablat	equ	0xFF5
  1375                           prodh	equ	0xFF4
  1376                           prodl	equ	0xFF3
  1377                           intcon	equ	0xFF2
  1378                           wreg	equ	0xFE8
  1379                           status	equ	0xFD8
  1380                           
  1381 ;; *************** function _output_highA *****************
  1382 ;; Defined at:
  1383 ;;		line 68 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  outputs         1    wreg     unsigned char 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  outputs         1   14[COMRAM] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1397 ;;      Params:         0       0       0       0       0       0       0       0       0
  1398 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1400 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1401 ;;Total ram usage:        1 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:    1
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_printDigit1
  1408 ;;		_printDigit2
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text12
  1413  000DD2                     __ptext12:
  1414                           	opt stack 0
  1415  000DD2                     _output_highA:
  1416                           	opt stack 27
  1417                           
  1418                           ;incstack = 0
  1419                           ;output_highA@outputs stored from wreg
  1420  000DD2  6E0F               	movwf	output_highA@outputs,c
  1421                           
  1422                           ;configIO.c: 69: LATA |= outputs;
  1423  000DD4  500F               	movf	output_highA@outputs,w,c
  1424  000DD6  1289               	iorwf	3977,f,c	;volatile
  1425  000DD8  0012               	return		;funcret
  1426  000DDA                     __end_of_output_highA:
  1427                           	opt stack 0
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           prodh	equ	0xFF4
  1433                           prodl	equ	0xFF3
  1434                           intcon	equ	0xFF2
  1435                           wreg	equ	0xFE8
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function ___lwmod *****************
  1439 ;; Defined at:
  1440 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  dividend        2   14[COMRAM] unsigned int 
  1443 ;;  divisor         2   16[COMRAM] unsigned int 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  counter         1   18[COMRAM] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  2   14[COMRAM] unsigned int 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1455 ;;      Params:         4       0       0       0       0       0       0       0       0
  1456 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1458 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1459 ;;Total ram usage:        5 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_printDisplays
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text13
  1470  000C3C                     __ptext13:
  1471                           	opt stack 0
  1472  000C3C                     ___lwmod:
  1473                           	opt stack 28
  1474                           
  1475                           ;incstack = 0
  1476  000C3C  5011               	movf	___lwmod@divisor,w,c
  1477  000C3E  1012               	iorwf	___lwmod@divisor+1,w,c
  1478  000C40  B4D8               	btfsc	status,2,c
  1479  000C42  D018               	goto	l664
  1480  000C44  0E01               	movlw	1
  1481  000C46  6E13               	movwf	___lwmod@counter,c
  1482  000C48  D004               	goto	l1149
  1483  000C4A                     l1147:
  1484  000C4A  90D8               	bcf	status,0,c
  1485  000C4C  3611               	rlcf	___lwmod@divisor,f,c
  1486  000C4E  3612               	rlcf	___lwmod@divisor+1,f,c
  1487  000C50  2A13               	incf	___lwmod@counter,f,c
  1488  000C52                     l1149:
  1489  000C52  AE12               	btfss	___lwmod@divisor+1,7,c
  1490  000C54  D7FA               	goto	l1147
  1491  000C56                     l1151:
  1492  000C56  5011               	movf	___lwmod@divisor,w,c
  1493  000C58  5C0F               	subwf	___lwmod@dividend,w,c
  1494  000C5A  5012               	movf	___lwmod@divisor+1,w,c
  1495  000C5C  5810               	subwfb	___lwmod@dividend+1,w,c
  1496  000C5E  A0D8               	btfss	status,0,c
  1497  000C60  D004               	goto	l1155
  1498  000C62  5011               	movf	___lwmod@divisor,w,c
  1499  000C64  5E0F               	subwf	___lwmod@dividend,f,c
  1500  000C66  5012               	movf	___lwmod@divisor+1,w,c
  1501  000C68  5A10               	subwfb	___lwmod@dividend+1,f,c
  1502  000C6A                     l1155:
  1503  000C6A  90D8               	bcf	status,0,c
  1504  000C6C  3212               	rrcf	___lwmod@divisor+1,f,c
  1505  000C6E  3211               	rrcf	___lwmod@divisor,f,c
  1506  000C70  2E13               	decfsz	___lwmod@counter,f,c
  1507  000C72  D7F1               	goto	l1151
  1508  000C74                     l664:
  1509  000C74  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  1510  000C78  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  1511  000C7C  0012               	return		;funcret
  1512  000C7E                     __end_of___lwmod:
  1513                           	opt stack 0
  1514                           tblptru	equ	0xFF8
  1515                           tblptrh	equ	0xFF7
  1516                           tblptrl	equ	0xFF6
  1517                           tablat	equ	0xFF5
  1518                           prodh	equ	0xFF4
  1519                           prodl	equ	0xFF3
  1520                           intcon	equ	0xFF2
  1521                           wreg	equ	0xFE8
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function ___lwdiv *****************
  1525 ;; Defined at:
  1526 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  dividend        2   19[COMRAM] unsigned int 
  1529 ;;  divisor         2   21[COMRAM] unsigned int 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  quotient        2   23[COMRAM] unsigned int 
  1532 ;;  counter         1   25[COMRAM] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  2   19[COMRAM] unsigned int 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1542 ;;      Params:         4       0       0       0       0       0       0       0       0
  1543 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1545 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1546 ;;Total ram usage:        7 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    1
  1549 ;; This function calls:
  1550 ;;		Nothing
  1551 ;; This function is called by:
  1552 ;;		_printDisplays
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text14
  1557  000BEA                     __ptext14:
  1558                           	opt stack 0
  1559  000BEA                     ___lwdiv:
  1560                           	opt stack 28
  1561                           
  1562                           ;incstack = 0
  1563  000BEA  0E00               	movlw	0
  1564  000BEC  6E19               	movwf	___lwdiv@quotient+1,c
  1565  000BEE  0E00               	movlw	0
  1566  000BF0  6E18               	movwf	___lwdiv@quotient,c
  1567  000BF2  5016               	movf	___lwdiv@divisor,w,c
  1568  000BF4  1017               	iorwf	___lwdiv@divisor+1,w,c
  1569  000BF6  B4D8               	btfsc	status,2,c
  1570  000BF8  D01C               	goto	l654
  1571  000BFA  0E01               	movlw	1
  1572  000BFC  6E1A               	movwf	___lwdiv@counter,c
  1573  000BFE  D004               	goto	l1129
  1574  000C00                     l1127:
  1575  000C00  90D8               	bcf	status,0,c
  1576  000C02  3616               	rlcf	___lwdiv@divisor,f,c
  1577  000C04  3617               	rlcf	___lwdiv@divisor+1,f,c
  1578  000C06  2A1A               	incf	___lwdiv@counter,f,c
  1579  000C08                     l1129:
  1580  000C08  AE17               	btfss	___lwdiv@divisor+1,7,c
  1581  000C0A  D7FA               	goto	l1127
  1582  000C0C                     l1131:
  1583  000C0C  90D8               	bcf	status,0,c
  1584  000C0E  3618               	rlcf	___lwdiv@quotient,f,c
  1585  000C10  3619               	rlcf	___lwdiv@quotient+1,f,c
  1586  000C12  5016               	movf	___lwdiv@divisor,w,c
  1587  000C14  5C14               	subwf	___lwdiv@dividend,w,c
  1588  000C16  5017               	movf	___lwdiv@divisor+1,w,c
  1589  000C18  5815               	subwfb	___lwdiv@dividend+1,w,c
  1590  000C1A  A0D8               	btfss	status,0,c
  1591  000C1C  D005               	goto	l1139
  1592  000C1E  5016               	movf	___lwdiv@divisor,w,c
  1593  000C20  5E14               	subwf	___lwdiv@dividend,f,c
  1594  000C22  5017               	movf	___lwdiv@divisor+1,w,c
  1595  000C24  5A15               	subwfb	___lwdiv@dividend+1,f,c
  1596  000C26  8018               	bsf	___lwdiv@quotient,0,c
  1597  000C28                     l1139:
  1598  000C28  90D8               	bcf	status,0,c
  1599  000C2A  3217               	rrcf	___lwdiv@divisor+1,f,c
  1600  000C2C  3216               	rrcf	___lwdiv@divisor,f,c
  1601  000C2E  2E1A               	decfsz	___lwdiv@counter,f,c
  1602  000C30  D7ED               	goto	l1131
  1603  000C32                     l654:
  1604  000C32  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  1605  000C36  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1606  000C3A  0012               	return		;funcret
  1607  000C3C                     __end_of___lwdiv:
  1608                           	opt stack 0
  1609                           tblptru	equ	0xFF8
  1610                           tblptrh	equ	0xFF7
  1611                           tblptrl	equ	0xFF6
  1612                           tablat	equ	0xFF5
  1613                           prodh	equ	0xFF4
  1614                           prodl	equ	0xFF3
  1615                           intcon	equ	0xFF2
  1616                           wreg	equ	0xFE8
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _output_highD *****************
  1620 ;; Defined at:
  1621 ;;		line 77 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  outputs         1    wreg     unsigned char 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  outputs         1   14[COMRAM] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1635 ;;      Params:         0       0       0       0       0       0       0       0       0
  1636 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1638 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1639 ;;Total ram usage:        1 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_main
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text15
  1650  000DDA                     __ptext15:
  1651                           	opt stack 0
  1652  000DDA                     _output_highD:
  1653                           	opt stack 29
  1654                           
  1655                           ;incstack = 0
  1656                           ;output_highD@outputs stored from wreg
  1657  000DDA  6E0F               	movwf	output_highD@outputs,c
  1658                           
  1659                           ;configIO.c: 78: LATD |= outputs;
  1660  000DDC  500F               	movf	output_highD@outputs,w,c
  1661  000DDE  128C               	iorwf	3980,f,c	;volatile
  1662  000DE0  0012               	return		;funcret
  1663  000DE2                     __end_of_output_highD:
  1664                           	opt stack 0
  1665                           tblptru	equ	0xFF8
  1666                           tblptrh	equ	0xFF7
  1667                           tblptrl	equ	0xFF6
  1668                           tablat	equ	0xFF5
  1669                           prodh	equ	0xFF4
  1670                           prodl	equ	0xFF3
  1671                           intcon	equ	0xFF2
  1672                           wreg	equ	0xFE8
  1673                           status	equ	0xFD8
  1674                           
  1675 ;; *************** function _output_highC *****************
  1676 ;; Defined at:
  1677 ;;		line 74 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  outputs         1    wreg     unsigned char 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  outputs         1   14[COMRAM] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0
  1692 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1694 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1695 ;;Total ram usage:        1 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text16
  1706  000DE2                     __ptext16:
  1707                           	opt stack 0
  1708  000DE2                     _output_highC:
  1709                           	opt stack 29
  1710                           
  1711                           ;incstack = 0
  1712                           ;output_highC@outputs stored from wreg
  1713  000DE2  6E0F               	movwf	output_highC@outputs,c
  1714                           
  1715                           ;configIO.c: 75: LATC |= outputs;
  1716  000DE4  500F               	movf	output_highC@outputs,w,c
  1717  000DE6  128B               	iorwf	3979,f,c	;volatile
  1718  000DE8  0012               	return		;funcret
  1719  000DEA                     __end_of_output_highC:
  1720                           	opt stack 0
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           prodh	equ	0xFF4
  1726                           prodl	equ	0xFF3
  1727                           intcon	equ	0xFF2
  1728                           wreg	equ	0xFE8
  1729                           status	equ	0xFD8
  1730                           
  1731 ;; *************** function _enableTimer0ISR *****************
  1732 ;; Defined at:
  1733 ;;		line 33 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/timer0lib.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		None
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1747 ;;      Params:         0       0       0       0       0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1750 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1751 ;;Total ram usage:        0 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    1
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text17
  1762  000DEA                     __ptext17:
  1763                           	opt stack 0
  1764  000DEA                     _enableTimer0ISR:
  1765                           	opt stack 29
  1766                           
  1767                           ;timer0lib.c: 35: T0IE=1;
  1768                           
  1769                           ;incstack = 0
  1770  000DEA  8AF2               	bsf	intcon,5,c	;volatile
  1771                           
  1772                           ;timer0lib.c: 36: TMR0IF=0;
  1773  000DEC  94F2               	bcf	intcon,2,c	;volatile
  1774  000DEE  0012               	return		;funcret
  1775  000DF0                     __end_of_enableTimer0ISR:
  1776                           	opt stack 0
  1777                           tblptru	equ	0xFF8
  1778                           tblptrh	equ	0xFF7
  1779                           tblptrl	equ	0xFF6
  1780                           tablat	equ	0xFF5
  1781                           prodh	equ	0xFF4
  1782                           prodl	equ	0xFF3
  1783                           intcon	equ	0xFF2
  1784                           wreg	equ	0xFE8
  1785                           status	equ	0xFD8
  1786                           
  1787 ;; *************** function _desableTimer0ISR *****************
  1788 ;; Defined at:
  1789 ;;		line 38 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/timer0lib.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		None
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text18
  1818  000DF0                     __ptext18:
  1819                           	opt stack 0
  1820  000DF0                     _desableTimer0ISR:
  1821                           	opt stack 29
  1822                           
  1823                           ;timer0lib.c: 40: T0IE=0;
  1824                           
  1825                           ;incstack = 0
  1826  000DF0  9AF2               	bcf	intcon,5,c	;volatile
  1827  000DF2  0012               	return		;funcret
  1828  000DF4                     __end_of_desableTimer0ISR:
  1829                           	opt stack 0
  1830                           tblptru	equ	0xFF8
  1831                           tblptrh	equ	0xFF7
  1832                           tblptrl	equ	0xFF6
  1833                           tablat	equ	0xFF5
  1834                           prodh	equ	0xFF4
  1835                           prodl	equ	0xFF3
  1836                           intcon	equ	0xFF2
  1837                           wreg	equ	0xFE8
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _configTimer0 *****************
  1841 ;; Defined at:
  1842 ;;		line 13 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/timer0lib.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  prescalerVal    1    wreg     unsigned char 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  prescalerVal    1   14[COMRAM] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1856 ;;      Params:         0       0       0       0       0       0       0       0       0
  1857 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1859 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1860 ;;Total ram usage:        1 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text19
  1871  000D4E                     __ptext19:
  1872                           	opt stack 0
  1873  000D4E                     _configTimer0:
  1874                           	opt stack 29
  1875                           
  1876                           ;incstack = 0
  1877                           ;configTimer0@prescalerValue stored from wreg
  1878  000D4E  6E0F               	movwf	configTimer0@prescalerValue,c
  1879                           
  1880                           ;timer0lib.c: 15: T0CS=0;
  1881  000D50  9AD5               	bcf	4053,5,c	;volatile
  1882                           
  1883                           ;timer0lib.c: 16: PSA = 0;
  1884  000D52  96D5               	bcf	4053,3,c	;volatile
  1885                           
  1886                           ;timer0lib.c: 17: T0CON=T0CON&0b11111000;
  1887  000D54  50D5               	movf	4053,w,c	;volatile
  1888  000D56  0BF8               	andlw	248
  1889  000D58  6ED5               	movwf	4053,c	;volatile
  1890                           
  1891                           ;timer0lib.c: 18: T0CON=(T0CON|prescalerValue);
  1892  000D5A  50D5               	movf	4053,w,c	;volatile
  1893  000D5C  100F               	iorwf	configTimer0@prescalerValue,w,c
  1894  000D5E  6ED5               	movwf	4053,c	;volatile
  1895                           
  1896                           ;timer0lib.c: 19: TMR0ON=1;
  1897  000D60  8ED5               	bsf	4053,7,c	;volatile
  1898  000D62  0012               	return		;funcret
  1899  000D64                     __end_of_configTimer0:
  1900                           	opt stack 0
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           prodh	equ	0xFF4
  1906                           prodl	equ	0xFF3
  1907                           intcon	equ	0xFF2
  1908                           wreg	equ	0xFE8
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function _configSevenSeg *****************
  1912 ;; Defined at:
  1913 ;;		line 38 in file "sevenSeg.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1927 ;;      Params:         0       0       0       0       0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1930 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1931 ;;Total ram usage:        0 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    2
  1934 ;; This function calls:
  1935 ;;		_setOutputA
  1936 ;;		_setOutputE
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text20
  1943  000D78                     __ptext20:
  1944                           	opt stack 0
  1945  000D78                     _configSevenSeg:
  1946                           	opt stack 28
  1947                           
  1948                           ;sevenSeg.c: 39: setOutputA(0b00100000|0b00000100);
  1949                           
  1950                           ;incstack = 0
  1951  000D78  0E24               	movlw	36
  1952  000D7A  ECDC  F006         	call	_setOutputA
  1953                           
  1954                           ;sevenSeg.c: 40: setOutputE(0b00000001|0b00000100);
  1955  000D7E  0E05               	movlw	5
  1956  000D80  ECD7  F006         	call	_setOutputE
  1957  000D84  0012               	return		;funcret
  1958  000D86                     __end_of_configSevenSeg:
  1959                           	opt stack 0
  1960                           tblptru	equ	0xFF8
  1961                           tblptrh	equ	0xFF7
  1962                           tblptrl	equ	0xFF6
  1963                           tablat	equ	0xFF5
  1964                           prodh	equ	0xFF4
  1965                           prodl	equ	0xFF3
  1966                           intcon	equ	0xFF2
  1967                           wreg	equ	0xFE8
  1968                           status	equ	0xFD8
  1969                           
  1970 ;; *************** function _setOutputE *****************
  1971 ;; Defined at:
  1972 ;;		line 27 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  outputs         1    wreg     unsigned char 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  outputs         1   14[COMRAM] unsigned char 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1986 ;;      Params:         0       0       0       0       0       0       0       0       0
  1987 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1989 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1990 ;;Total ram usage:        1 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    1
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_configSevenSeg
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text21
  2001  000DAE                     __ptext21:
  2002                           	opt stack 0
  2003  000DAE                     _setOutputE:
  2004                           	opt stack 28
  2005                           
  2006                           ;incstack = 0
  2007                           ;setOutputE@outputs stored from wreg
  2008  000DAE  6E0F               	movwf	setOutputE@outputs,c
  2009                           
  2010                           ;configIO.c: 28: TRISE &= ~outputs;
  2011  000DB0  500F               	movf	setOutputE@outputs,w,c
  2012  000DB2  0AFF               	xorlw	255
  2013  000DB4  1696               	andwf	3990,f,c	;volatile
  2014  000DB6  0012               	return		;funcret
  2015  000DB8                     __end_of_setOutputE:
  2016                           	opt stack 0
  2017                           tblptru	equ	0xFF8
  2018                           tblptrh	equ	0xFF7
  2019                           tblptrl	equ	0xFF6
  2020                           tablat	equ	0xFF5
  2021                           prodh	equ	0xFF4
  2022                           prodl	equ	0xFF3
  2023                           intcon	equ	0xFF2
  2024                           wreg	equ	0xFE8
  2025                           status	equ	0xFD8
  2026                           
  2027 ;; *************** function _setOutputA *****************
  2028 ;; Defined at:
  2029 ;;		line 15 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  outputs         1    wreg     unsigned char 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  outputs         1   14[COMRAM] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0
  2044 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2046 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2047 ;;Total ram usage:        1 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    1
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_configSevenSeg
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text22
  2058  000DB8                     __ptext22:
  2059                           	opt stack 0
  2060  000DB8                     _setOutputA:
  2061                           	opt stack 28
  2062                           
  2063                           ;incstack = 0
  2064                           ;setOutputA@outputs stored from wreg
  2065  000DB8  6E0F               	movwf	setOutputA@outputs,c
  2066                           
  2067                           ;configIO.c: 16: TRISA &= ~outputs;
  2068  000DBA  500F               	movf	setOutputA@outputs,w,c
  2069  000DBC  0AFF               	xorlw	255
  2070  000DBE  1692               	andwf	3986,f,c	;volatile
  2071  000DC0  0012               	return		;funcret
  2072  000DC2                     __end_of_setOutputA:
  2073                           	opt stack 0
  2074                           tblptru	equ	0xFF8
  2075                           tblptrh	equ	0xFF7
  2076                           tblptrl	equ	0xFF6
  2077                           tablat	equ	0xFF5
  2078                           prodh	equ	0xFF4
  2079                           prodl	equ	0xFF3
  2080                           intcon	equ	0xFF2
  2081                           wreg	equ	0xFE8
  2082                           status	equ	0xFD8
  2083                           
  2084 ;; *************** function _adcRead *****************
  2085 ;; Defined at:
  2086 ;;		line 27 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/adclib.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  channel         1    wreg     unsigned char 
  2089 ;;  resultFormat    1   14[COMRAM] unsigned char 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  channel         1   22[COMRAM] unsigned char 
  2092 ;;  returnValue     2   20[COMRAM] unsigned int 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  2   14[COMRAM] unsigned int 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2102 ;;      Params:         2       0       0       0       0       0       0       0       0
  2103 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2104 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2105 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2106 ;;Total ram usage:        9 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    1
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_main
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text23
  2117  000A4C                     __ptext23:
  2118                           	opt stack 0
  2119  000A4C                     _adcRead:
  2120                           	opt stack 29
  2121                           
  2122                           ;incstack = 0
  2123                           ;adcRead@channel stored from wreg
  2124  000A4C  6E17               	movwf	adcRead@channel,c
  2125                           
  2126                           ;adclib.c: 28: unsigned int returnValue=0;
  2127  000A4E  0E00               	movlw	0
  2128  000A50  6E16               	movwf	adcRead@returnValue+1,c
  2129  000A52  0E00               	movlw	0
  2130  000A54  6E15               	movwf	adcRead@returnValue,c
  2131                           
  2132                           ;adclib.c: 29: if(channel>7)
  2133  000A56  0E07               	movlw	7
  2134  000A58  6417               	cpfsgt	adcRead@channel,c
  2135  000A5A  D005               	goto	l1173
  2136                           
  2137                           ;adclib.c: 30: {
  2138                           ;adclib.c: 31: return 0;
  2139  000A5C  0E00               	movlw	0
  2140  000A5E  6E10               	movwf	?_adcRead+1,c
  2141  000A60  0E00               	movlw	0
  2142  000A62  6E0F               	movwf	?_adcRead,c
  2143  000A64  0012               	return	
  2144  000A66                     l1173:
  2145                           
  2146                           ;adclib.c: 32: }
  2147                           ;adclib.c: 33: ADCON0&=0b11000011;
  2148  000A66  0EC3               	movlw	195
  2149  000A68  16C2               	andwf	4034,f,c	;volatile
  2150                           
  2151                           ;adclib.c: 34: ADCON0|=(channel<<2);
  2152  000A6A  4417               	rlncf	adcRead@channel,w,c
  2153  000A6C  46E8               	rlncf	wreg,f,c
  2154  000A6E  0BFC               	andlw	252
  2155  000A70  12C2               	iorwf	4034,f,c	;volatile
  2156                           
  2157                           ;adclib.c: 35: ADCON2&=0b01111111;
  2158  000A72  9EC0               	bcf	4032,7,c	;volatile
  2159                           
  2160                           ;adclib.c: 36: ADCON2|=(resultFormat);
  2161  000A74  500F               	movf	adcRead@resultFormat,w,c
  2162  000A76  12C0               	iorwf	4032,f,c	;volatile
  2163                           
  2164                           ;adclib.c: 37: ADON=1;
  2165  000A78  80C2               	bsf	4034,0,c	;volatile
  2166                           
  2167                           ;adclib.c: 38: _delay(80);
  2168  000A7A  0E1A               	movlw	26
  2169  000A7C                     u477:
  2170  000A7C  2EE8               	decfsz	wreg,f,c
  2171  000A7E  D7FE               	goto	u477
  2172  000A80  D000               	nop2		;nop
  2173                           
  2174                           ;adclib.c: 40: GO_nDONE=1;
  2175  000A82  82C2               	bsf	4034,1,c	;volatile
  2176  000A84                     l28:
  2177  000A84  B2C2               	btfsc	4034,1,c	;volatile
  2178  000A86  D7FE               	goto	l28
  2179                           
  2180                           ;adclib.c: 43: if(resultFormat==0b10000000)
  2181  000A88  0E80               	movlw	128
  2182  000A8A  180F               	xorwf	adcRead@resultFormat,w,c
  2183  000A8C  A4D8               	btfss	status,2,c
  2184  000A8E  D00B               	goto	l1189
  2185                           
  2186                           ;adclib.c: 44: returnValue= (ADRESH<<8)|ADRESL;
  2187  000A90  50C3               	movf	4035,w,c	;volatile
  2188  000A92  CFC4 F011          	movff	4036,??_adcRead	;volatile
  2189  000A96  6A12               	clrf	(??_adcRead+1)& (0+255),c
  2190  000A98  C011  F012         	movff	??_adcRead,??_adcRead+1
  2191  000A9C  6A11               	clrf	??_adcRead,c
  2192  000A9E  1011               	iorwf	??_adcRead,w,c
  2193  000AA0  6E15               	movwf	adcRead@returnValue,c
  2194  000AA2  5012               	movf	??_adcRead+1,w,c
  2195  000AA4  D018               	goto	L1
  2196  000AA6                     l1189:
  2197                           
  2198                           ;adclib.c: 45: else if(resultFormat==0b00000000)
  2199  000AA6  500F               	movf	adcRead@resultFormat,w,c
  2200  000AA8  A4D8               	btfss	status,2,c
  2201  000AAA  D016               	goto	l1193
  2202                           
  2203                           ;adclib.c: 46: returnValue=(ADRESH<<2)|(ADRESL>>6);
  2204  000AAC  CFC3 F011          	movff	4035,??_adcRead	;volatile
  2205  000AB0  0E06               	movlw	6
  2206  000AB2  6E12               	movwf	(??_adcRead+1)& (0+255),c
  2207  000AB4                     u335:
  2208  000AB4  90D8               	bcf	status,0,c
  2209  000AB6  3211               	rrcf	??_adcRead,f,c
  2210  000AB8  2E12               	decfsz	(??_adcRead+1)& (0+255),f,c
  2211  000ABA  D7FC               	goto	u335
  2212  000ABC  5011               	movf	??_adcRead,w,c
  2213  000ABE  CFC4 F013          	movff	4036,??_adcRead+2	;volatile
  2214  000AC2  6A14               	clrf	(??_adcRead+3)& (0+255),c
  2215  000AC4  90D8               	bcf	status,0,c
  2216  000AC6  3613               	rlcf	??_adcRead+2,f,c
  2217  000AC8  3614               	rlcf	??_adcRead+3,f,c
  2218  000ACA  90D8               	bcf	status,0,c
  2219  000ACC  3613               	rlcf	??_adcRead+2,f,c
  2220  000ACE  3614               	rlcf	??_adcRead+3,f,c
  2221  000AD0  1013               	iorwf	??_adcRead+2,w,c
  2222  000AD2  6E15               	movwf	adcRead@returnValue,c
  2223  000AD4  5014               	movf	??_adcRead+3,w,c
  2224  000AD6                     L1:
  2225  000AD6  6E16               	movwf	adcRead@returnValue+1,c
  2226  000AD8                     l1193:
  2227                           
  2228                           ;adclib.c: 47: return returnValue;
  2229  000AD8  C015  F00F         	movff	adcRead@returnValue,?_adcRead
  2230  000ADC  C016  F010         	movff	adcRead@returnValue+1,?_adcRead+1
  2231  000AE0  0012               	return	
  2232  000AE2                     __end_of_adcRead:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           prodh	equ	0xFF4
  2239                           prodl	equ	0xFF3
  2240                           intcon	equ	0xFF2
  2241                           wreg	equ	0xFE8
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function _adcConfig *****************
  2245 ;; Defined at:
  2246 ;;		line 11 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/adclib.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  conversionRa    1    wreg     unsigned char 
  2249 ;;  acqTime         1   14[COMRAM] unsigned char 
  2250 ;;  portConfig      1   15[COMRAM] unsigned char 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  conversionRa    1   16[COMRAM] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2262 ;;      Params:         2       0       0       0       0       0       0       0       0
  2263 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2265 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2266 ;;Total ram usage:        3 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_main
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text24
  2277  000D2E                     __ptext24:
  2278                           	opt stack 0
  2279  000D2E                     _adcConfig:
  2280                           	opt stack 29
  2281                           
  2282                           ;incstack = 0
  2283                           ;adcConfig@conversionRate stored from wreg
  2284  000D2E  6E11               	movwf	adcConfig@conversionRate,c
  2285                           
  2286                           ;adclib.c: 13: ADCON2&=0b11111000;
  2287  000D30  0EF8               	movlw	248
  2288  000D32  16C0               	andwf	4032,f,c	;volatile
  2289                           
  2290                           ;adclib.c: 14: ADCON2|=conversionRate;
  2291  000D34  5011               	movf	adcConfig@conversionRate,w,c
  2292  000D36  12C0               	iorwf	4032,f,c	;volatile
  2293                           
  2294                           ;adclib.c: 16: ADCON2&=0b11000111;
  2295  000D38  0EC7               	movlw	199
  2296  000D3A  16C0               	andwf	4032,f,c	;volatile
  2297                           
  2298                           ;adclib.c: 17: ADCON2|=acqTime;
  2299  000D3C  500F               	movf	adcConfig@acqTime,w,c
  2300  000D3E  12C0               	iorwf	4032,f,c	;volatile
  2301                           
  2302                           ;adclib.c: 20: ADCON1&=0b11110000;
  2303  000D40  0EF0               	movlw	240
  2304  000D42  16C1               	andwf	4033,f,c	;volatile
  2305                           
  2306                           ;adclib.c: 21: ADCON1|=portConfig;
  2307  000D44  5010               	movf	adcConfig@portConfig,w,c
  2308  000D46  12C1               	iorwf	4033,f,c	;volatile
  2309                           
  2310                           ;adclib.c: 22: VCFG1=0;
  2311  000D48  9AC1               	bcf	4033,5,c	;volatile
  2312                           
  2313                           ;adclib.c: 23: VCFG0=0;
  2314  000D4A  98C1               	bcf	4033,4,c	;volatile
  2315  000D4C  0012               	return		;funcret
  2316  000D4E                     __end_of_adcConfig:
  2317                           	opt stack 0
  2318                           tblptru	equ	0xFF8
  2319                           tblptrh	equ	0xFF7
  2320                           tblptrl	equ	0xFF6
  2321                           tablat	equ	0xFF5
  2322                           prodh	equ	0xFF4
  2323                           prodl	equ	0xFF3
  2324                           intcon	equ	0xFF2
  2325                           wreg	equ	0xFE8
  2326                           status	equ	0xFD8
  2327                           
  2328 ;; *************** function _ISR *****************
  2329 ;; Defined at:
  2330 ;;		line 12 in file "main.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2346 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2347 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2348 ;;Total ram usage:       14 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		Interrupt level 2
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	intcode
  2358  000008                     __pintcode:
  2359                           	opt stack 0
  2360  000008                     _ISR:
  2361                           	opt stack 27
  2362                           
  2363                           ;incstack = 0
  2364  000008  8225               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2365  00000A  CFFA F001          	movff	pclath,??_ISR
  2366  00000E  CFFB F002          	movff	pclatu,??_ISR+1
  2367  000012  ED71  F005         	call	int_func,f	;refresh shadow registers
  2368                           pclatu	equ	0xFFB
  2369                           pclath	equ	0xFFA
  2370                           tblptru	equ	0xFF8
  2371                           tblptrh	equ	0xFF7
  2372                           tblptrl	equ	0xFF6
  2373                           tablat	equ	0xFF5
  2374                           prodh	equ	0xFF4
  2375                           prodl	equ	0xFF3
  2376                           intcon	equ	0xFF2
  2377                           wreg	equ	0xFE8
  2378                           status	equ	0xFD8
  2379                           
  2380                           	psect	intcode_body
  2381  000AE2                     __pintcode_body:
  2382                           	opt stack 27
  2383  000AE2                     int_func:
  2384                           	opt stack 27
  2385  000AE2  0006               	pop		; remove dummy address from shadow register refresh
  2386  000AE4  CFE9 F003          	movff	fsr0l,??_ISR+2
  2387  000AE8  CFEA F004          	movff	fsr0h,??_ISR+3
  2388  000AEC  CFE1 F005          	movff	fsr1l,??_ISR+4
  2389  000AF0  CFE2 F006          	movff	fsr1h,??_ISR+5
  2390  000AF4  CFD9 F007          	movff	fsr2l,??_ISR+6
  2391  000AF8  CFDA F008          	movff	fsr2h,??_ISR+7
  2392  000AFC  CFF3 F009          	movff	prodl,??_ISR+8
  2393  000B00  CFF4 F00A          	movff	prodh,??_ISR+9
  2394  000B04  CFF6 F00B          	movff	tblptrl,??_ISR+10
  2395  000B08  CFF7 F00C          	movff	tblptrh,??_ISR+11
  2396  000B0C  CFF8 F00D          	movff	tblptru,??_ISR+12
  2397  000B10  CFF5 F00E          	movff	tablat,??_ISR+13
  2398                           
  2399                           ;main.c: 13: if (T0IF) {
  2400  000B14  A4F2               	btfss	intcon,2,c	;volatile
  2401  000B16  D00D               	goto	i2l200
  2402                           
  2403                           ;main.c: 14: T0IF = 0;
  2404  000B18  94F2               	bcf	intcon,2,c	;volatile
  2405                           
  2406                           ;main.c: 15: contador++;
  2407  000B1A  2A24               	incf	_contador,f,c
  2408                           
  2409                           ;main.c: 16: if (contador == 61) {
  2410  000B1C  0E3D               	movlw	61
  2411  000B1E  1824               	xorwf	_contador,w,c
  2412  000B20  A4D8               	btfss	status,2,c
  2413  000B22  D007               	goto	i2l200
  2414                           
  2415                           ;main.c: 17: LATC7 = ~LATC7;
  2416  000B24  BE8B               	btfsc	3979,7,c	;volatile
  2417  000B26  D002               	goto	i2u20_40
  2418  000B28  8E8B               	bsf	3979,7,c	;volatile
  2419  000B2A  D001               	goto	i2l1071
  2420  000B2C                     i2u20_40:
  2421  000B2C  9E8B               	bcf	3979,7,c	;volatile
  2422  000B2E                     i2l1071:
  2423                           
  2424                           ;main.c: 18: contador = 0x00;
  2425  000B2E  0E00               	movlw	0
  2426  000B30  6E24               	movwf	_contador,c
  2427  000B32                     i2l200:
  2428  000B32  C00E  FFF5         	movff	??_ISR+13,tablat
  2429  000B36  C00D  FFF8         	movff	??_ISR+12,tblptru
  2430  000B3A  C00C  FFF7         	movff	??_ISR+11,tblptrh
  2431  000B3E  C00B  FFF6         	movff	??_ISR+10,tblptrl
  2432  000B42  C00A  FFF4         	movff	??_ISR+9,prodh
  2433  000B46  C009  FFF3         	movff	??_ISR+8,prodl
  2434  000B4A  C008  FFDA         	movff	??_ISR+7,fsr2h
  2435  000B4E  C007  FFD9         	movff	??_ISR+6,fsr2l
  2436  000B52  C006  FFE2         	movff	??_ISR+5,fsr1h
  2437  000B56  C005  FFE1         	movff	??_ISR+4,fsr1l
  2438  000B5A  C004  FFEA         	movff	??_ISR+3,fsr0h
  2439  000B5E  C003  FFE9         	movff	??_ISR+2,fsr0l
  2440  000B62  C002  FFFB         	movff	??_ISR+1,pclatu
  2441  000B66  C001  FFFA         	movff	??_ISR,pclath
  2442  000B6A  9225               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2443  000B6C  0011               	retfie		f
  2444  000B6E                     __end_of_ISR:
  2445                           	opt stack 0
  2446                           pclatu	equ	0xFFB
  2447                           pclath	equ	0xFFA
  2448                           tblptru	equ	0xFF8
  2449                           tblptrh	equ	0xFF7
  2450                           tblptrl	equ	0xFF6
  2451                           tablat	equ	0xFF5
  2452                           prodh	equ	0xFF4
  2453                           prodl	equ	0xFF3
  2454                           intcon	equ	0xFF2
  2455                           fsr0h	equ	0xFEA
  2456                           fsr0l	equ	0xFE9
  2457                           wreg	equ	0xFE8
  2458                           fsr1h	equ	0xFE2
  2459                           fsr1l	equ	0xFE1
  2460                           fsr2h	equ	0xFDA
  2461                           fsr2l	equ	0xFD9
  2462                           status	equ	0xFD8
  2463                           pclatu	equ	0xFFB
  2464                           pclath	equ	0xFFA
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           prodh	equ	0xFF4
  2470                           prodl	equ	0xFF3
  2471                           intcon	equ	0xFF2
  2472                           fsr0h	equ	0xFEA
  2473                           fsr0l	equ	0xFE9
  2474                           wreg	equ	0xFE8
  2475                           fsr1h	equ	0xFE2
  2476                           fsr1l	equ	0xFE1
  2477                           fsr2h	equ	0xFDA
  2478                           fsr2l	equ	0xFD9
  2479                           status	equ	0xFD8
  2480                           
  2481                           	psect	rparam
  2482  0000                     pclatu	equ	0xFFB
  2483                           pclath	equ	0xFFA
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           prodh	equ	0xFF4
  2489                           prodl	equ	0xFF3
  2490                           intcon	equ	0xFF2
  2491                           fsr0h	equ	0xFEA
  2492                           fsr0l	equ	0xFE9
  2493                           wreg	equ	0xFE8
  2494                           fsr1h	equ	0xFE2
  2495                           fsr1l	equ	0xFE1
  2496                           fsr2h	equ	0xFDA
  2497                           fsr2l	equ	0xFD9
  2498                           status	equ	0xFD8
  2499                           
  2500                           	psect	temp
  2501  000025                     btemp:
  2502                           	opt stack 0
  2503  000025                     	ds	1
  2504  0000                     int$flags	set	btemp
  2505                           pclatu	equ	0xFFB
  2506                           pclath	equ	0xFFA
  2507                           tblptru	equ	0xFF8
  2508                           tblptrh	equ	0xFF7
  2509                           tblptrl	equ	0xFF6
  2510                           tablat	equ	0xFF5
  2511                           prodh	equ	0xFF4
  2512                           prodl	equ	0xFF3
  2513                           intcon	equ	0xFF2
  2514                           fsr0h	equ	0xFEA
  2515                           fsr0l	equ	0xFE9
  2516                           wreg	equ	0xFE8
  2517                           fsr1h	equ	0xFE2
  2518                           fsr1l	equ	0xFE1
  2519                           fsr2h	equ	0xFDA
  2520                           fsr2l	equ	0xFD9
  2521                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      36
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_printDisplays
    _printDisplays->___lwdiv
    _printDigit4->_output_highE
    _printDigit4->_output_lowA
    _printDigit4->_output_lowE
    _printDigit3->_output_highE
    _printDigit3->_output_lowA
    _printDigit3->_output_lowE
    _printDigit2->_output_highA
    _printDigit2->_output_lowA
    _printDigit2->_output_lowE
    _printDigit1->_output_highA
    _printDigit1->_output_lowA
    _printDigit1->_output_lowE
    ___lwdiv->___lwmod
    _configSevenSeg->_setOutputA
    _configSevenSeg->_setOutputE

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3155
                                             33 COMRAM     2     2      0
                          _adcConfig
                            _adcRead
                     _configSevenSeg
                       _configTimer0
                   _desableTimer0ISR
                    _enableTimer0ISR
                       _output_highC
                       _output_highD
                      _printDisplays
                        _resetTimer0
                          _setInputA
                         _setOutputC
 ---------------------------------------------------------------------------------
 (1) _setOutputC                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setInputA                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printDisplays                                       11     9      2    2674
                                             26 COMRAM     7     5      2
                            ___lwdiv
                            ___lwmod
                        _printDigit1
                        _printDigit2
                        _printDigit3
                        _printDigit4
 ---------------------------------------------------------------------------------
 (2) _printDigit4                                          1     1      0      88
                                             15 COMRAM     1     1      0
                       _output_highE
                        _output_lowA
                        _output_lowE
 ---------------------------------------------------------------------------------
 (2) _printDigit3                                          1     1      0      88
                                             15 COMRAM     1     1      0
                       _output_highE
                        _output_lowA
                        _output_lowE
 ---------------------------------------------------------------------------------
 (3) _output_highE                                         1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _printDigit2                                          1     1      0      88
                                             15 COMRAM     1     1      0
                       _output_highA
                        _output_lowA
                        _output_lowE
 ---------------------------------------------------------------------------------
 (2) _printDigit1                                          1     1      0      88
                                             15 COMRAM     1     1      0
                       _output_highA
                        _output_lowA
                        _output_lowE
 ---------------------------------------------------------------------------------
 (3) _output_lowE                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _output_lowA                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _output_highA                                         1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1019
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     678
                                             19 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _output_highD                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _output_highC                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _enableTimer0ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _desableTimer0ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configTimer0                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configSevenSeg                                       0     0      0      30
                         _setOutputA
                         _setOutputE
 ---------------------------------------------------------------------------------
 (2) _setOutputE                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setOutputA                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              9     7      2     178
                                             14 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _adcConfig                                            3     1      2     152
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcConfig
   _adcRead
   _configSevenSeg
     _setOutputA
     _setOutputE
   _configTimer0
   _desableTimer0ISR
   _enableTimer0ISR
   _output_highC
   _output_highD
   _printDisplays
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _printDigit1
       _output_highA
       _output_lowA
       _output_lowE
     _printDigit2
       _output_highA
       _output_lowA
       _output_lowE
     _printDigit3
       _output_highE
       _output_lowA
       _output_lowE
     _printDigit4
       _output_highE
       _output_lowA
       _output_lowE
   _resetTimer0
   _setInputA
   _setOutputC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      24       1       38.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      24      20        0.0%
DATA                 0      0      24       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu Sep 05 23:15:53 2019

                        l28 0A84          printDisplays@valor 001B                 __CFG_BOR$ON 000000  
               __CFG_BORV$3 000000                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000                 __CFG_LVP$ON 000000  
                       l203 0BB0                         l654 0C32                         l664 0C74  
                       _GIE 007F97                __CFG_CPB$OFF 000000                         u350 082C  
                       u335 0AB4                         u417 0858                         u370 0888  
              __CFG_CPD$OFF 000000                         u427 08D0                         _ISR 0008  
                       u437 090C                         u447 0994                         u457 09EC  
                       u467 0A28                         u477 0A7C                         _PSA 007EAB  
                       wreg 000FE8                __CFG_FOSC$HS 000000                        ?_ISR 0001  
              __CFG_WDT$OFF 000000                        l1201 0820                        l1131 0C0C  
                      l1211 087C                        l1127 0C00                        l1151 0C56  
                      l1129 0C08                        l1139 0C28                        l1155 0C6A  
                      l1147 0C4A                        l1227 0930                        l1173 0A66  
                      l1149 0C52                        l1263 0BDE                        l1193 0AD8  
                      l1189 0AA6                        _ADON 007E10                        _T0IE 007F95  
                      _T0IF 007F92                        _T0CS 007EAD                        _LATA 000F89  
                      _LATB 000F8A                        _LATC 000F8B                        _LATD 000F8C  
                      _LATE 000F8D                        _TMR0 000FD6              ??_configTimer0 000F  
               _output_lowA 0DA4                 _output_lowE 0D9A       __size_of_output_highA 0008  
     __size_of_output_highC 0008       __size_of_output_highD 0008       __size_of_output_highE 0008  
                      _main 0B6E                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr0l 000FE9                        fsr2h 000FDA                        fsr1l 000FE1  
                      fsr2l 000FD9                        btemp 0025                        pclat 000FFA  
                      prodh 000FF4                        prodl 000FF3                        start 0016  
             __CFG_IESO$OFF 000000            printDigit1@valor 0010            printDigit2@valor 0010  
          printDigit3@valor 0010            printDigit4@valor 0010                ___param_bank 000010  
           ??_printDisplays 001D                       ??_ISR 0001             _enableTimer0ISR 0DEA  
             __CFG_PLLDIV$1 000000           _printDisplays$800 001E           _printDisplays$799 0020  
            __CFG_CCP2MX$ON 000000                       ?_main 0001             __end_of_adcRead 0AE2  
                     _T0CON 000FD5                       _LATC7 007C5F             __end_of___lwdiv 0C3C  
                     i2l200 0B32             __end_of___lwmod 0C7E                       _VCFG0 007E0C  
                     _VCFG1 007E0D                       _PORTB 000F81               __CFG_USBDIV$1 000000  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96               __CFG_PWRT$OFF 000000  
             __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000  
             __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
             __CFG_WRTB$OFF 000000                _output_highA 0DD2                _output_highC 0DE2  
              _output_highD 0DDA                _output_highE 0DCA               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000     adcConfig@conversionRate 0011  
                     tablat 000FF5                       status 000FD8              __CFG_ICPRT$OFF 000000  
            __CFG_PBADEN$ON 000000              __CFG_MCLRE$OFF 000000             __initialization 0D64  
              __end_of_main 0BEA                      ??_main 0022               __activetblptr 000001  
                    _ADCON0 000FC2                      _ADCON1 000FC1                      _ADCON2 000FC0  
                    _ADRESH 000FC4                      _ADRESL 000FC3   __size_of_desableTimer0ISR 0004  
                    i2l1071 0B2E                      _TMR0IF 007F92                      _TMR0ON 007EAF  
              ?_resetTimer0 0001     __end_of_enableTimer0ISR 0DF0              __CFG_XINST$OFF 000000  
          ??_configSevenSeg 0010                   ??_adcRead 0011              __CFG_STVREN$ON 000000  
                 ??___lwdiv 0018                   ??___lwmod 0013                      _tabela 0801  
      __end_of_configTimer0 0D64                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                ?_printDigit1 0001  
              ?_printDigit2 0001                ?_printDigit3 0001                ?_printDigit4 0001  
        __size_of_adcConfig 0020                  __accesstop 0060         output_highA@outputs 000F  
   __end_of__initialization 0D66               ___rparam_used 000001         output_highC@outputs 000F  
       output_highD@outputs 000F         output_highE@outputs 000F              __pcstackCOMRAM 0001  
              ?_output_lowA 0001                ?_output_lowE 0001            ?_enableTimer0ISR 0001  
        __size_of_setInputA 0008           __end_of_adcConfig 0D4E                     i2u20_40 0B2C  
          _desableTimer0ISR 0DF0             __CFG_VREGEN$OFF 000000                     __Hparam 0000  
                   __Lparam 0000        __size_of_resetTimer0 000A                     _adcRead 0A4C  
     __size_of_configTimer0 0016                     ___lwdiv 0BEA       __end_of_printDisplays 0A4C  
                   ___lwmod 0C3C                __psmallconst 0800                     __pcinit 0D64  
       adcConfig@portConfig 0010                     __ramtop 0800                     __ptext0 0B6E  
                   __ptext1 0D86                     __ptext2 0DC2                     __ptext3 0D90  
                   __ptext4 080C                     __ptext5 0C7E                     __ptext6 0CAA  
                   __ptext7 0DCA                     __ptext8 0CD6                     __ptext9 0D02  
              __size_of_ISR 0B66              __pintcode_body 0AE2        __size_of_printDigit1 002C  
      __size_of_printDigit2 002C        __size_of_printDigit3 002C        __size_of_printDigit4 002C  
      end_of_initialization 0D66           __end_of_setInputA 0DCA                     int_func 0AE2  
              _configTimer0 0D4E                  _setOutputA 0DB8                  _setOutputC 0D86  
                _setOutputE 0DAE        __size_of_output_lowA 000A        __size_of_output_lowE 000A  
            __end_of_tabela 080B         start_initialization 0D64                 __end_of_ISR 0B6E  
               ?_setOutputA 0001                 ?_setOutputC 0001                 ?_setOutputE 0001  
            adcRead@channel 0017            __CFG_LPT1OSC$OFF 000000    __end_of_desableTimer0ISR 0DF4  
                 _adcConfig 0D2E     __size_of_configSevenSeg 000E                 __pbssCOMRAM 0024  
             ?_output_highA 0001               ?_output_highC 0001               ?_output_highD 0001  
             ?_output_highE 0001            ___lwdiv@dividend 0014                   __pintcode 0008  
                  ?_adcRead 000F                    ?___lwdiv 0014                    ?___lwmod 000F  
  __size_of_enableTimer0ISR 0006                  ?_adcConfig 000F                 __smallconst 0800  
            ??_output_highA 000F              ??_output_highC 000F              ??_output_highD 000F  
            ??_output_highE 000F         __size_of_setOutputA 000A         __size_of_setOutputC 000A  
       __size_of_setOutputE 000A            ___lwdiv@quotient 0018               ??_resetTimer0 000F  
       adcRead@resultFormat 000F             setInputA@inputs 000F                   _setInputA 0DC2  
                  _GO_nDONE 007E11            __CFG_WDTPS$32768 000000                   main@valor 0022  
             ??_printDigit1 0010               ??_printDigit2 0010               ??_printDigit3 0010  
             ??_printDigit4 0010            adcConfig@acqTime 000F  configTimer0@prescalerValue 000F  
    __size_of_printDisplays 0240                  ?_setInputA 0001                    __Hrparam 0000  
                  __Lrparam 0000                __Lsmallconst 0800         __end_of_resetTimer0 0D9A  
          __size_of_adcRead 0096            __size_of___lwdiv 0052            __size_of___lwmod 0042  
               ??_adcConfig 0011              _configSevenSeg 0D78           ??_enableTimer0ISR 000F  
           ___lwdiv@divisor 0016             ___lwdiv@counter 001A                    __ptext10 0D9A  
                  __ptext11 0DA4                    __ptext20 0D78                    __ptext12 0DD2  
                  __ptext21 0DAE                    __ptext13 0C3C                    __ptext22 0DB8  
                  __ptext14 0BEA                    __ptext23 0A4C                    __ptext15 0DDA  
                  __ptext24 0D2E                    __ptext16 0DE2                    __ptext17 0DEA  
                  __ptext18 0DF0                    __ptext19 0D4E                    _contador 0024  
             ??_output_lowA 000F               ??_output_lowE 000F         __end_of_printDigit1 0D2E  
       __end_of_printDigit2 0D02         __end_of_printDigit3 0CD6         __end_of_printDigit4 0CAA  
             __size_of_main 007C                ??_setOutputA 000F                ??_setOutputC 000F  
              ??_setOutputE 000F        __end_of_output_highA 0DDA        __end_of_output_highC 0DEA  
      __end_of_output_highD 0DE2        __end_of_output_highE 0DD2          adcRead@returnValue 0015  
                  int$flags 0025               _printDisplays 080C           ?_desableTimer0ISR 0001  
        output_lowA@outputs 000F      __end_of_configSevenSeg 0D86       __CFG_CPUDIV$OSC1_PLL2 000000  
        ??_desableTimer0ISR 000F          output_lowE@outputs 000F          __end_of_setOutputA 0DC2  
        __end_of_setOutputC 0D90          __end_of_setOutputE 0DB8                    intlevel2 0000  
          ___lwmod@dividend 000F                 ??_setInputA 000F                 _resetTimer0 0D90  
         setOutputA@outputs 000F         __end_of_output_lowA 0DAE         __end_of_output_lowE 0DA4  
         setOutputC@outputs 000F              ?_printDisplays 001B           setOutputE@outputs 000F  
           ?_configSevenSeg 0001             ___lwmod@divisor 0011             ___lwmod@counter 0013  
               _printDigit1 0D02                 _printDigit2 0CD6                 _printDigit3 0CAA  
               _printDigit4 0C7E               ?_configTimer0 0001  
