

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu Sep 05 23:27:19 2019

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	smallconst
    42  000800                     __psmallconst:
    43                           	opt stack 0
    44  000800  00                 	db	0
    45  000801                     _tabela:
    46                           	opt stack 0
    47  000801  3F                 	db	63
    48  000802  06                 	db	6
    49  000803  5B                 	db	91
    50  000804  4F                 	db	79
    51  000805  66                 	db	102
    52  000806  6D                 	db	109
    53  000807  7C                 	db	124
    54  000808  07                 	db	7
    55  000809  7F                 	db	127
    56  00080A  67                 	db	103
    57  00080B                     __end_of_tabela:
    58                           	opt stack 0
    59  0000                     _TMR0	set	4054
    60  0000                     _ADCON0	set	4034
    61  0000                     _ADCON1	set	4033
    62  0000                     _ADCON2	set	4032
    63  0000                     _ADRESH	set	4036
    64  0000                     _ADRESL	set	4035
    65  0000                     _LATA	set	3977
    66  0000                     _LATB	set	3978
    67  0000                     _LATC	set	3979
    68  0000                     _LATD	set	3980
    69  0000                     _LATE	set	3981
    70  0000                     _PORTB	set	3969
    71  0000                     _T0CON	set	4053
    72  0000                     _TRISA	set	3986
    73  0000                     _TRISB	set	3987
    74  0000                     _TRISC	set	3988
    75  0000                     _TRISD	set	3989
    76  0000                     _TRISE	set	3990
    77  0000                     _ADON	set	32272
    78  0000                     _GIE	set	32663
    79  0000                     _GO_nDONE	set	32273
    80  0000                     _LATC7	set	31839
    81  0000                     _PSA	set	32427
    82  0000                     _T0CS	set	32429
    83  0000                     _T0IE	set	32661
    84  0000                     _T0IF	set	32658
    85  0000                     _TMR0IF	set	32658
    86  0000                     _TMR0ON	set	32431
    87  0000                     _VCFG0	set	32268
    88  0000                     _VCFG1	set	32269
    89                           
    90                           ; #config settings
    91  00080B  00                 	db	0	; dummy byte at the end
    92  0000                     
    93                           	psect	cinit
    94  000D6A                     __pcinit:
    95                           	opt stack 0
    96  000D6A                     start_initialization:
    97                           	opt stack 0
    98  000D6A                     __initialization:
    99                           	opt stack 0
   100                           
   101                           ; Clear objects allocated to COMRAM (1 bytes)
   102  000D6A  6A24               	clrf	__pbssCOMRAM& (0+255),c
   103  000D6C                     end_of_initialization:
   104                           	opt stack 0
   105  000D6C                     __end_of__initialization:
   106                           	opt stack 0
   107  000D6C  9025               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   108  000D6E  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   109  000D70  0E00               	movlw	low (__Lsmallconst shr (0+16))
   110  000D72  6EF8               	movwf	tblptru,c
   111  000D74  0E08               	movlw	high __Lsmallconst
   112  000D76  6EF7               	movwf	tblptrh,c
   113  000D78  0100               	movlb	0
   114  000D7A  EFB7  F005         	goto	_main	;jump to C main() function
   115                           tblptru	equ	0xFF8
   116                           tblptrh	equ	0xFF7
   117                           
   118                           	psect	bssCOMRAM
   119  000024                     __pbssCOMRAM:
   120                           	opt stack 0
   121  000024                     _contador:
   122                           	opt stack 0
   123  000024                     	ds	1
   124                           tblptru	equ	0xFF8
   125                           tblptrh	equ	0xFF7
   126                           
   127                           	psect	cstackCOMRAM
   128  000001                     __pcstackCOMRAM:
   129                           	opt stack 0
   130  000001                     ??_ISR:
   131  000001                     
   132                           ; 2 bytes @ 0x0
   133  000001                     	ds	14
   134  00000F                     ?_adcRead:
   135                           	opt stack 0
   136  00000F                     ?___lwmod:
   137                           	opt stack 0
   138  00000F                     adcConfig@acqTime:
   139                           	opt stack 0
   140  00000F                     adcRead@resultFormat:
   141                           	opt stack 0
   142  00000F                     setOutputA@outputs:
   143                           	opt stack 0
   144  00000F                     setOutputC@outputs:
   145                           	opt stack 0
   146  00000F                     setOutputD@outputs:
   147                           	opt stack 0
   148  00000F                     setOutputE@outputs:
   149                           	opt stack 0
   150  00000F                     setInputA@inputs:
   151                           	opt stack 0
   152  00000F                     output_lowA@outputs:
   153                           	opt stack 0
   154  00000F                     output_lowE@outputs:
   155                           	opt stack 0
   156  00000F                     output_highA@outputs:
   157                           	opt stack 0
   158  00000F                     output_highC@outputs:
   159                           	opt stack 0
   160  00000F                     output_highD@outputs:
   161                           	opt stack 0
   162  00000F                     output_highE@outputs:
   163                           	opt stack 0
   164  00000F                     configTimer0@prescalerValue:
   165                           	opt stack 0
   166  00000F                     ___lwmod@dividend:
   167                           	opt stack 0
   168                           
   169                           ; 2 bytes @ 0xE
   170  00000F                     	ds	1
   171  000010                     adcConfig@portConfig:
   172                           	opt stack 0
   173  000010                     printDigit1@valor:
   174                           	opt stack 0
   175  000010                     printDigit2@valor:
   176                           	opt stack 0
   177  000010                     printDigit3@valor:
   178                           	opt stack 0
   179  000010                     printDigit4@valor:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0xF
   183  000010                     	ds	1
   184  000011                     ??_adcRead:
   185  000011                     adcConfig@conversionRate:
   186                           	opt stack 0
   187  000011                     ___lwmod@divisor:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x10
   191  000011                     	ds	2
   192  000013                     ___lwmod@counter:
   193                           	opt stack 0
   194                           
   195                           ; 1 bytes @ 0x12
   196  000013                     	ds	1
   197  000014                     ?___lwdiv:
   198                           	opt stack 0
   199  000014                     ___lwdiv@dividend:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x13
   203  000014                     	ds	1
   204  000015                     adcRead@returnValue:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x14
   208  000015                     	ds	1
   209  000016                     ___lwdiv@divisor:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x15
   213  000016                     	ds	1
   214  000017                     adcRead@channel:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x16
   218  000017                     	ds	1
   219  000018                     ___lwdiv@quotient:
   220                           	opt stack 0
   221                           
   222                           ; 2 bytes @ 0x17
   223  000018                     	ds	2
   224  00001A                     ___lwdiv@counter:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0x19
   228  00001A                     	ds	1
   229  00001B                     printDisplays@valor:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x1A
   233  00001B                     	ds	2
   234  00001D                     ??_printDisplays:
   235                           
   236                           ; 1 bytes @ 0x1C
   237  00001D                     	ds	1
   238  00001E                     _printDisplays$801:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x1D
   242  00001E                     	ds	2
   243  000020                     _printDisplays$800:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x1F
   247  000020                     	ds	2
   248  000022                     main@valor:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x21
   252  000022                     	ds	2
   253                           tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 28 in file "main.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  valor           2   33[COMRAM] unsigned int 
   266 ;; Return value:  Size  Location     Type
   267 ;;                  2  204[None  ] int 
   268 ;; Registers used:
   269 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   275 ;;      Params:         0       0       0       0       0       0       0       0       0
   276 ;;      Locals:         2       0       0       0       0       0       0       0       0
   277 ;;      Temps:          0       0       0       0       0       0       0       0       0
   278 ;;      Totals:         2       0       0       0       0       0       0       0       0
   279 ;;Total ram usage:        2 bytes
   280 ;; Hardware stack levels required when called:    4
   281 ;; This function calls:
   282 ;;		_adcConfig
   283 ;;		_adcRead
   284 ;;		_configSevenSeg
   285 ;;		_configTimer0
   286 ;;		_desableTimer0ISR
   287 ;;		_enableTimer0ISR
   288 ;;		_output_highC
   289 ;;		_output_highD
   290 ;;		_printDisplays
   291 ;;		_resetTimer0
   292 ;;		_setInputA
   293 ;;		_setOutputC
   294 ;;		_setOutputD
   295 ;; This function is called by:
   296 ;;		Startup code after reset
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           	psect	text0
   301  000B6E                     __ptext0:
   302                           	opt stack 0
   303  000B6E                     _main:
   304                           	opt stack 27
   305                           
   306                           ;main.c: 30: setOutputC(0b10000000);
   307                           
   308                           ;incstack = 0
   309  000B6E  0E80               	movlw	128
   310  000B70  ECCB  F006         	call	_setOutputC
   311                           
   312                           ;main.c: 31: output_highC(0b10000000);
   313  000B74  0E80               	movlw	128
   314  000B76  ECF9  F006         	call	_output_highC
   315                           
   316                           ;main.c: 33: setInputA(0b00000001);
   317  000B7A  0E01               	movlw	1
   318  000B7C  ECE9  F006         	call	_setInputA
   319                           
   320                           ;main.c: 34: setOutputD(0b00000001|0b00000010|0b00000100|0b00001000|0b00010000|0b0010000
      +                          0|0b01000000|0b10000000);
   321  000B80  0EFF               	movlw	255
   322  000B82  ECC6  F006         	call	_setOutputD
   323                           
   324                           ;main.c: 35: output_highD(0b00000001|0b00000010|0b00000100|0b00001000|0b00010000|0b00100
      +                          000|0b01000000|0b10000000);
   325  000B86  0EFF               	movlw	255
   326  000B88  ECF5  F006         	call	_output_highD
   327                           
   328                           ;main.c: 36: configTimer0(0b00000110);
   329  000B8C  0E06               	movlw	6
   330  000B8E  ECAA  F006         	call	_configTimer0
   331                           
   332                           ;main.c: 37: enableTimer0ISR();
   333  000B92  ECFD  F006         	call	_enableTimer0ISR	;wreg free
   334                           
   335                           ;main.c: 38: resetTimer0();
   336  000B96  ECD0  F006         	call	_resetTimer0	;wreg free
   337                           
   338                           ;main.c: 39: GIE = 1;
   339  000B9A  8EF2               	bsf	intcon,7,c	;volatile
   340                           
   341                           ;main.c: 41: adcConfig(0b00000001, 0b00011000, 0b00000000);
   342  000B9C  0E18               	movlw	24
   343  000B9E  6E0F               	movwf	adcConfig@acqTime,c
   344  000BA0  0E00               	movlw	0
   345  000BA2  6E10               	movwf	adcConfig@portConfig,c
   346  000BA4  0E01               	movlw	1
   347  000BA6  EC9A  F006         	call	_adcConfig
   348                           
   349                           ;main.c: 42: configSevenSeg();
   350  000BAA  ECBF  F006         	call	_configSevenSeg	;wreg free
   351                           
   352                           ;main.c: 44: unsigned int valor = 0;
   353  000BAE  0E00               	movlw	0
   354  000BB0  6E23               	movwf	main@valor+1,c
   355  000BB2  0E00               	movlw	0
   356  000BB4  6E22               	movwf	main@valor,c
   357  000BB6                     l205:
   358                           
   359                           ;main.c: 47: valor = adcRead(0,0b10000000);
   360  000BB6  0E80               	movlw	128
   361  000BB8  6E0F               	movwf	adcRead@resultFormat,c
   362  000BBA  0E00               	movlw	0
   363  000BBC  EC26  F005         	call	_adcRead
   364  000BC0  C00F  F022         	movff	?_adcRead,main@valor
   365  000BC4  C010  F023         	movff	?_adcRead+1,main@valor+1
   366                           
   367                           ;main.c: 49: printDisplays(valor);
   368  000BC8  C022  F01B         	movff	main@valor,printDisplays@valor
   369  000BCC  C023  F01C         	movff	main@valor+1,printDisplays@valor+1
   370  000BD0  EC06  F004         	call	_printDisplays	;wreg free
   371                           
   372                           ;main.c: 50: if(valor > 512){
   373  000BD4  0422               	decf	main@valor,w,c
   374  000BD6  0E02               	movlw	2
   375  000BD8  5823               	subwfb	main@valor+1,w,c
   376  000BDA  A0D8               	btfss	status,0,c
   377  000BDC  D003               	goto	l1265
   378                           
   379                           ;main.c: 51: enableTimer0ISR();
   380  000BDE  ECFD  F006         	call	_enableTimer0ISR	;wreg free
   381                           
   382                           ;main.c: 52: }
   383  000BE2  D7E9               	goto	l205
   384  000BE4                     l1265:
   385                           
   386                           ;main.c: 53: else{
   387                           ;main.c: 54: desableTimer0ISR();
   388  000BE4  EC00  F007         	call	_desableTimer0ISR	;wreg free
   389                           
   390                           ;main.c: 55: output_highC(0b10000000);
   391  000BE8  0E80               	movlw	128
   392  000BEA  ECF9  F006         	call	_output_highC
   393  000BEE  D7E3               	goto	l205
   394  000BF0                     __end_of_main:
   395                           	opt stack 0
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           intcon	equ	0xFF2
   399                           status	equ	0xFD8
   400                           
   401 ;; *************** function _setOutputD *****************
   402 ;; Defined at:
   403 ;;		line 24 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;  outputs         1    wreg     unsigned char 
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  outputs         1   14[COMRAM] unsigned char 
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, status,2, status,0
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   417 ;;      Params:         0       0       0       0       0       0       0       0       0
   418 ;;      Locals:         1       0       0       0       0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0       0       0       0       0
   420 ;;      Totals:         1       0       0       0       0       0       0       0       0
   421 ;;Total ram usage:        1 bytes
   422 ;; Hardware stack levels used:    1
   423 ;; Hardware stack levels required when called:    1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text1
   432  000D8C                     __ptext1:
   433                           	opt stack 0
   434  000D8C                     _setOutputD:
   435                           	opt stack 29
   436                           
   437                           ;incstack = 0
   438                           ;setOutputD@outputs stored from wreg
   439  000D8C  6E0F               	movwf	setOutputD@outputs,c
   440                           
   441                           ;configIO.c: 25: TRISD &= ~outputs;
   442  000D8E  500F               	movf	setOutputD@outputs,w,c
   443  000D90  0AFF               	xorlw	255
   444  000D92  1695               	andwf	3989,f,c	;volatile
   445  000D94  0012               	return		;funcret
   446  000D96                     __end_of_setOutputD:
   447                           	opt stack 0
   448                           tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           intcon	equ	0xFF2
   451                           status	equ	0xFD8
   452                           
   453 ;; *************** function _setOutputC *****************
   454 ;; Defined at:
   455 ;;		line 21 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;  outputs         1    wreg     unsigned char 
   458 ;; Auto vars:     Size  Location     Type
   459 ;;  outputs         1   14[COMRAM] unsigned char 
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   469 ;;      Params:         0       0       0       0       0       0       0       0       0
   470 ;;      Locals:         1       0       0       0       0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0
   472 ;;      Totals:         1       0       0       0       0       0       0       0       0
   473 ;;Total ram usage:        1 bytes
   474 ;; Hardware stack levels used:    1
   475 ;; Hardware stack levels required when called:    1
   476 ;; This function calls:
   477 ;;		Nothing
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text2
   484  000D96                     __ptext2:
   485                           	opt stack 0
   486  000D96                     _setOutputC:
   487                           	opt stack 29
   488                           
   489                           ;incstack = 0
   490                           ;setOutputC@outputs stored from wreg
   491  000D96  6E0F               	movwf	setOutputC@outputs,c
   492                           
   493                           ;configIO.c: 22: TRISC &= ~outputs;
   494  000D98  500F               	movf	setOutputC@outputs,w,c
   495  000D9A  0AFF               	xorlw	255
   496  000D9C  1694               	andwf	3988,f,c	;volatile
   497  000D9E  0012               	return		;funcret
   498  000DA0                     __end_of_setOutputC:
   499                           	opt stack 0
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           intcon	equ	0xFF2
   503                           status	equ	0xFD8
   504                           
   505 ;; *************** function _setInputA *****************
   506 ;; Defined at:
   507 ;;		line 36 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;  inputs          1    wreg     unsigned char 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  inputs          1   14[COMRAM] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, status,2, status,0
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   521 ;;      Params:         0       0       0       0       0       0       0       0       0
   522 ;;      Locals:         1       0       0       0       0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0       0       0
   524 ;;      Totals:         1       0       0       0       0       0       0       0       0
   525 ;;Total ram usage:        1 bytes
   526 ;; Hardware stack levels used:    1
   527 ;; Hardware stack levels required when called:    1
   528 ;; This function calls:
   529 ;;		Nothing
   530 ;; This function is called by:
   531 ;;		_main
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text3
   536  000DD2                     __ptext3:
   537                           	opt stack 0
   538  000DD2                     _setInputA:
   539                           	opt stack 29
   540                           
   541                           ;incstack = 0
   542                           ;setInputA@inputs stored from wreg
   543  000DD2  6E0F               	movwf	setInputA@inputs,c
   544                           
   545                           ;configIO.c: 37: TRISA|=inputs;
   546  000DD4  500F               	movf	setInputA@inputs,w,c
   547  000DD6  1292               	iorwf	3986,f,c	;volatile
   548  000DD8  0012               	return		;funcret
   549  000DDA                     __end_of_setInputA:
   550                           	opt stack 0
   551                           tblptru	equ	0xFF8
   552                           tblptrh	equ	0xFF7
   553                           intcon	equ	0xFF2
   554                           status	equ	0xFD8
   555                           
   556 ;; *************** function _resetTimer0 *****************
   557 ;; Defined at:
   558 ;;		line 30 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/timer0lib.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   572 ;;      Params:         0       0       0       0       0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0       0       0       0       0
   575 ;;      Totals:         0       0       0       0       0       0       0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text4
   587  000DA0                     __ptext4:
   588                           	opt stack 0
   589  000DA0                     _resetTimer0:
   590                           	opt stack 29
   591                           
   592                           ;timer0lib.c: 31: TMR0=0x00;
   593                           
   594                           ;incstack = 0
   595  000DA0  0E00               	movlw	0
   596  000DA2  6ED7               	movwf	4055,c	;volatile
   597  000DA4  0E00               	movlw	0
   598  000DA6  6ED6               	movwf	4054,c	;volatile
   599  000DA8  0012               	return		;funcret
   600  000DAA                     __end_of_resetTimer0:
   601                           	opt stack 0
   602                           tblptru	equ	0xFF8
   603                           tblptrh	equ	0xFF7
   604                           intcon	equ	0xFF2
   605                           status	equ	0xFD8
   606                           
   607 ;; *************** function _printDisplays *****************
   608 ;; Defined at:
   609 ;;		line 42 in file "sevenSeg.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  valor           2   26[COMRAM] unsigned int 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   623 ;;      Params:         2       0       0       0       0       0       0       0       0
   624 ;;      Locals:         4       0       0       0       0       0       0       0       0
   625 ;;      Temps:          1       0       0       0       0       0       0       0       0
   626 ;;      Totals:         7       0       0       0       0       0       0       0       0
   627 ;;Total ram usage:        7 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    3
   630 ;; This function calls:
   631 ;;		___lwdiv
   632 ;;		___lwmod
   633 ;;		_printDigit1
   634 ;;		_printDigit2
   635 ;;		_printDigit3
   636 ;;		_printDigit4
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text5
   643  00080C                     __ptext5:
   644                           	opt stack 0
   645  00080C                     _printDisplays:
   646                           	opt stack 27
   647                           
   648                           ;sevenSeg.c: 43: if(valor<10){
   649                           
   650                           ;incstack = 0
   651  00080C  501C               	movf	printDisplays@valor+1,w,c
   652  00080E  E108               	bnz	l1203
   653  000810  0E0A               	movlw	10
   654  000812  5C1B               	subwf	printDisplays@valor,w,c
   655  000814  B0D8               	btfsc	status,0,c
   656  000816  D004               	goto	l1203
   657                           
   658                           ;sevenSeg.c: 44: printDigit1((unsigned char)valor);
   659  000818  501B               	movf	printDisplays@valor,w,c
   660  00081A  EC84  F006         	call	_printDigit1
   661                           
   662                           ;sevenSeg.c: 45: }
   663  00081E  0012               	return	
   664  000820                     l1203:
   665                           
   666                           ;sevenSeg.c: 46: else if(valor>=10 && valor<100){
   667  000820  501C               	movf	printDisplays@valor+1,w,c
   668  000822  E104               	bnz	u350
   669  000824  0E0A               	movlw	10
   670  000826  5C1B               	subwf	printDisplays@valor,w,c
   671  000828  A0D8               	btfss	status,0,c
   672  00082A  D028               	goto	l1213
   673  00082C                     u350:
   674  00082C  501C               	movf	printDisplays@valor+1,w,c
   675  00082E  E126               	bnz	l1213
   676  000830  0E64               	movlw	100
   677  000832  5C1B               	subwf	printDisplays@valor,w,c
   678  000834  B0D8               	btfsc	status,0,c
   679  000836  D022               	goto	l1213
   680                           
   681                           ;sevenSeg.c: 47: printDigit1((unsigned char)(valor%10));
   682  000838  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   683  00083C  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   684  000840  0E00               	movlw	0
   685  000842  6E12               	movwf	___lwmod@divisor+1,c
   686  000844  0E0A               	movlw	10
   687  000846  6E11               	movwf	___lwmod@divisor,c
   688  000848  EC21  F006         	call	___lwmod	;wreg free
   689  00084C  500F               	movf	?___lwmod,w,c
   690  00084E  EC84  F006         	call	_printDigit1
   691                           
   692                           ;sevenSeg.c: 48: _delay((unsigned long)((5)*(8000000/4000.0)));
   693  000852  0E0D               	movlw	13
   694  000854  6E1D               	movwf	??_printDisplays& (0+255),c
   695  000856  0EFC               	movlw	252
   696  000858                     u417:
   697  000858  2EE8               	decfsz	wreg,f,c
   698  00085A  D7FE               	goto	u417
   699  00085C  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   700  00085E  D7FC               	goto	u417
   701                           
   702                           ;sevenSeg.c: 49: printDigit2((unsigned char)(valor/10));
   703  000860  C01B  F014         	movff	printDisplays@valor,___lwdiv@dividend
   704  000864  C01C  F015         	movff	printDisplays@valor+1,___lwdiv@dividend+1
   705  000868  0E00               	movlw	0
   706  00086A  6E17               	movwf	___lwdiv@divisor+1,c
   707  00086C  0E0A               	movlw	10
   708  00086E  6E16               	movwf	___lwdiv@divisor,c
   709  000870  ECF8  F005         	call	___lwdiv	;wreg free
   710  000874  5014               	movf	?___lwdiv,w,c
   711  000876  EC6E  F006         	call	_printDigit2
   712                           
   713                           ;sevenSeg.c: 50: }
   714  00087A  0012               	return	
   715  00087C                     l1213:
   716                           
   717                           ;sevenSeg.c: 51: else if(valor>=100 && valor <1000){
   718  00087C  501C               	movf	printDisplays@valor+1,w,c
   719  00087E  E104               	bnz	u370
   720  000880  0E64               	movlw	100
   721  000882  5C1B               	subwf	printDisplays@valor,w,c
   722  000884  A0D8               	btfss	status,0,c
   723  000886  D054               	goto	l1229
   724  000888                     u370:
   725  000888  0EE8               	movlw	232
   726  00088A  5C1B               	subwf	printDisplays@valor,w,c
   727  00088C  0E03               	movlw	3
   728  00088E  581C               	subwfb	printDisplays@valor+1,w,c
   729  000890  B0D8               	btfsc	status,0,c
   730  000892  D04E               	goto	l1229
   731                           
   732                           ;sevenSeg.c: 52: printDigit1((unsigned char)((valor%100)%10));
   733  000894  0E00               	movlw	0
   734  000896  6E12               	movwf	___lwmod@divisor+1,c
   735  000898  0E64               	movlw	100
   736  00089A  6E11               	movwf	___lwmod@divisor,c
   737  00089C  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   738  0008A0  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   739  0008A4  EC21  F006         	call	___lwmod	;wreg free
   740  0008A8  C00F  F020         	movff	?___lwmod,_printDisplays$800
   741  0008AC  C010  F021         	movff	?___lwmod+1,_printDisplays$800+1
   742                           
   743                           ;sevenSeg.c: 52: printDigit1((unsigned char)((valor%100)%10));
   744  0008B0  C020  F00F         	movff	_printDisplays$800,___lwmod@dividend
   745  0008B4  C021  F010         	movff	_printDisplays$800+1,___lwmod@dividend+1
   746  0008B8  0E00               	movlw	0
   747  0008BA  6E12               	movwf	___lwmod@divisor+1,c
   748  0008BC  0E0A               	movlw	10
   749  0008BE  6E11               	movwf	___lwmod@divisor,c
   750  0008C0  EC21  F006         	call	___lwmod	;wreg free
   751  0008C4  500F               	movf	?___lwmod,w,c
   752  0008C6  EC84  F006         	call	_printDigit1
   753                           
   754                           ;sevenSeg.c: 53: _delay((unsigned long)((5)*(8000000/4000.0)));
   755  0008CA  0E0D               	movlw	13
   756  0008CC  6E1D               	movwf	??_printDisplays& (0+255),c
   757  0008CE  0EFC               	movlw	252
   758  0008D0                     u427:
   759  0008D0  2EE8               	decfsz	wreg,f,c
   760  0008D2  D7FE               	goto	u427
   761  0008D4  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   762  0008D6  D7FC               	goto	u427
   763                           
   764                           ;sevenSeg.c: 54: printDigit2((unsigned char)((valor%100)/10));
   765  0008D8  0E00               	movlw	0
   766  0008DA  6E12               	movwf	___lwmod@divisor+1,c
   767  0008DC  0E64               	movlw	100
   768  0008DE  6E11               	movwf	___lwmod@divisor,c
   769  0008E0  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   770  0008E4  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   771  0008E8  EC21  F006         	call	___lwmod	;wreg free
   772  0008EC  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   773  0008F0  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   774  0008F4  0E00               	movlw	0
   775  0008F6  6E17               	movwf	___lwdiv@divisor+1,c
   776  0008F8  0E0A               	movlw	10
   777  0008FA  6E16               	movwf	___lwdiv@divisor,c
   778  0008FC  ECF8  F005         	call	___lwdiv	;wreg free
   779  000900  5014               	movf	?___lwdiv,w,c
   780  000902  EC6E  F006         	call	_printDigit2
   781                           
   782                           ;sevenSeg.c: 55: _delay((unsigned long)((5)*(8000000/4000.0)));
   783  000906  0E0D               	movlw	13
   784  000908  6E1D               	movwf	??_printDisplays& (0+255),c
   785  00090A  0EFC               	movlw	252
   786  00090C                     u437:
   787  00090C  2EE8               	decfsz	wreg,f,c
   788  00090E  D7FE               	goto	u437
   789  000910  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   790  000912  D7FC               	goto	u437
   791                           
   792                           ;sevenSeg.c: 56: printDigit3((unsigned char)((valor/100)));
   793  000914  C01B  F014         	movff	printDisplays@valor,___lwdiv@dividend
   794  000918  C01C  F015         	movff	printDisplays@valor+1,___lwdiv@dividend+1
   795  00091C  0E00               	movlw	0
   796  00091E  6E17               	movwf	___lwdiv@divisor+1,c
   797  000920  0E64               	movlw	100
   798  000922  6E16               	movwf	___lwdiv@divisor,c
   799  000924  ECF8  F005         	call	___lwdiv	;wreg free
   800  000928  5014               	movf	?___lwdiv,w,c
   801  00092A  EC58  F006         	call	_printDigit3
   802                           
   803                           ;sevenSeg.c: 57: }
   804  00092E  0012               	return	
   805  000930                     l1229:
   806                           
   807                           ;sevenSeg.c: 58: else if(valor>=1000){
   808  000930  0EE8               	movlw	232
   809  000932  5C1B               	subwf	printDisplays@valor,w,c
   810  000934  0E03               	movlw	3
   811  000936  581C               	subwfb	printDisplays@valor+1,w,c
   812  000938  A0D8               	btfss	status,0,c
   813  00093A  0012               	return	
   814                           
   815                           ;sevenSeg.c: 59: printDigit1((unsigned char)(((valor%1000)%100)%10));
   816  00093C  0E03               	movlw	3
   817  00093E  6E12               	movwf	___lwmod@divisor+1,c
   818  000940  0EE8               	movlw	232
   819  000942  6E11               	movwf	___lwmod@divisor,c
   820  000944  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   821  000948  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   822  00094C  EC21  F006         	call	___lwmod	;wreg free
   823  000950  C00F  F020         	movff	?___lwmod,_printDisplays$800
   824  000954  C010  F021         	movff	?___lwmod+1,_printDisplays$800+1
   825                           
   826                           ;sevenSeg.c: 59: printDigit1((unsigned char)(((valor%1000)%100)%10));
   827  000958  0E00               	movlw	0
   828  00095A  6E12               	movwf	___lwmod@divisor+1,c
   829  00095C  0E64               	movlw	100
   830  00095E  6E11               	movwf	___lwmod@divisor,c
   831  000960  C020  F00F         	movff	_printDisplays$800,___lwmod@dividend
   832  000964  C021  F010         	movff	_printDisplays$800+1,___lwmod@dividend+1
   833  000968  EC21  F006         	call	___lwmod	;wreg free
   834  00096C  C00F  F01E         	movff	?___lwmod,_printDisplays$801
   835  000970  C010  F01F         	movff	?___lwmod+1,_printDisplays$801+1
   836                           
   837                           ;sevenSeg.c: 59: printDigit1((unsigned char)(((valor%1000)%100)%10));
   838  000974  C01E  F00F         	movff	_printDisplays$801,___lwmod@dividend
   839  000978  C01F  F010         	movff	_printDisplays$801+1,___lwmod@dividend+1
   840  00097C  0E00               	movlw	0
   841  00097E  6E12               	movwf	___lwmod@divisor+1,c
   842  000980  0E0A               	movlw	10
   843  000982  6E11               	movwf	___lwmod@divisor,c
   844  000984  EC21  F006         	call	___lwmod	;wreg free
   845  000988  500F               	movf	?___lwmod,w,c
   846  00098A  EC84  F006         	call	_printDigit1
   847                           
   848                           ;sevenSeg.c: 60: _delay((unsigned long)((5)*(8000000/4000.0)));
   849  00098E  0E0D               	movlw	13
   850  000990  6E1D               	movwf	??_printDisplays& (0+255),c
   851  000992  0EFC               	movlw	252
   852  000994                     u447:
   853  000994  2EE8               	decfsz	wreg,f,c
   854  000996  D7FE               	goto	u447
   855  000998  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   856  00099A  D7FC               	goto	u447
   857                           
   858                           ;sevenSeg.c: 61: printDigit2((unsigned char)(((valor%1000)%100)/10));
   859  00099C  0E03               	movlw	3
   860  00099E  6E12               	movwf	___lwmod@divisor+1,c
   861  0009A0  0EE8               	movlw	232
   862  0009A2  6E11               	movwf	___lwmod@divisor,c
   863  0009A4  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   864  0009A8  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   865  0009AC  EC21  F006         	call	___lwmod	;wreg free
   866  0009B0  C00F  F020         	movff	?___lwmod,_printDisplays$800
   867  0009B4  C010  F021         	movff	?___lwmod+1,_printDisplays$800+1
   868                           
   869                           ;sevenSeg.c: 61: printDigit2((unsigned char)(((valor%1000)%100)/10));
   870  0009B8  0E00               	movlw	0
   871  0009BA  6E12               	movwf	___lwmod@divisor+1,c
   872  0009BC  0E64               	movlw	100
   873  0009BE  6E11               	movwf	___lwmod@divisor,c
   874  0009C0  C020  F00F         	movff	_printDisplays$800,___lwmod@dividend
   875  0009C4  C021  F010         	movff	_printDisplays$800+1,___lwmod@dividend+1
   876  0009C8  EC21  F006         	call	___lwmod	;wreg free
   877  0009CC  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   878  0009D0  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   879  0009D4  0E00               	movlw	0
   880  0009D6  6E17               	movwf	___lwdiv@divisor+1,c
   881  0009D8  0E0A               	movlw	10
   882  0009DA  6E16               	movwf	___lwdiv@divisor,c
   883  0009DC  ECF8  F005         	call	___lwdiv	;wreg free
   884  0009E0  5014               	movf	?___lwdiv,w,c
   885  0009E2  EC6E  F006         	call	_printDigit2
   886                           
   887                           ;sevenSeg.c: 62: _delay((unsigned long)((5)*(8000000/4000.0)));
   888  0009E6  0E0D               	movlw	13
   889  0009E8  6E1D               	movwf	??_printDisplays& (0+255),c
   890  0009EA  0EFC               	movlw	252
   891  0009EC                     u457:
   892  0009EC  2EE8               	decfsz	wreg,f,c
   893  0009EE  D7FE               	goto	u457
   894  0009F0  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   895  0009F2  D7FC               	goto	u457
   896                           
   897                           ;sevenSeg.c: 63: printDigit3((unsigned char)(((valor%1000)/100)));
   898  0009F4  0E03               	movlw	3
   899  0009F6  6E12               	movwf	___lwmod@divisor+1,c
   900  0009F8  0EE8               	movlw	232
   901  0009FA  6E11               	movwf	___lwmod@divisor,c
   902  0009FC  C01B  F00F         	movff	printDisplays@valor,___lwmod@dividend
   903  000A00  C01C  F010         	movff	printDisplays@valor+1,___lwmod@dividend+1
   904  000A04  EC21  F006         	call	___lwmod	;wreg free
   905  000A08  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   906  000A0C  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   907  000A10  0E00               	movlw	0
   908  000A12  6E17               	movwf	___lwdiv@divisor+1,c
   909  000A14  0E64               	movlw	100
   910  000A16  6E16               	movwf	___lwdiv@divisor,c
   911  000A18  ECF8  F005         	call	___lwdiv	;wreg free
   912  000A1C  5014               	movf	?___lwdiv,w,c
   913  000A1E  EC58  F006         	call	_printDigit3
   914                           
   915                           ;sevenSeg.c: 64: _delay((unsigned long)((5)*(8000000/4000.0)));
   916  000A22  0E0D               	movlw	13
   917  000A24  6E1D               	movwf	??_printDisplays& (0+255),c
   918  000A26  0EFC               	movlw	252
   919  000A28                     u467:
   920  000A28  2EE8               	decfsz	wreg,f,c
   921  000A2A  D7FE               	goto	u467
   922  000A2C  2E1D               	decfsz	??_printDisplays& (0+255),f,c
   923  000A2E  D7FC               	goto	u467
   924                           
   925                           ;sevenSeg.c: 65: printDigit4((unsigned char)(valor/1000));
   926  000A30  C01B  F014         	movff	printDisplays@valor,___lwdiv@dividend
   927  000A34  C01C  F015         	movff	printDisplays@valor+1,___lwdiv@dividend+1
   928  000A38  0E03               	movlw	3
   929  000A3A  6E17               	movwf	___lwdiv@divisor+1,c
   930  000A3C  0EE8               	movlw	232
   931  000A3E  6E16               	movwf	___lwdiv@divisor,c
   932  000A40  ECF8  F005         	call	___lwdiv	;wreg free
   933  000A44  5014               	movf	?___lwdiv,w,c
   934  000A46  EC42  F006         	call	_printDigit4
   935  000A4A  0012               	return	
   936  000A4C                     __end_of_printDisplays:
   937                           	opt stack 0
   938                           tblptru	equ	0xFF8
   939                           tblptrh	equ	0xFF7
   940                           intcon	equ	0xFF2
   941                           wreg	equ	0xFE8
   942                           status	equ	0xFD8
   943                           
   944 ;; *************** function _printDigit4 *****************
   945 ;; Defined at:
   946 ;;		line 32 in file "sevenSeg.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  valor           1    wreg     unsigned char 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  valor           1   15[COMRAM] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         0       0       0       0       0       0       0       0       0
   961 ;;      Locals:         1       0       0       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0
   963 ;;      Totals:         1       0       0       0       0       0       0       0       0
   964 ;;Total ram usage:        1 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    2
   967 ;; This function calls:
   968 ;;		_output_highE
   969 ;;		_output_lowA
   970 ;;		_output_lowE
   971 ;; This function is called by:
   972 ;;		_printDisplays
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text6
   977  000C84                     __ptext6:
   978                           	opt stack 0
   979  000C84                     _printDigit4:
   980                           	opt stack 27
   981                           
   982                           ;incstack = 0
   983                           ;printDigit4@valor stored from wreg
   984  000C84  6E10               	movwf	printDigit4@valor,c
   985                           
   986                           ;sevenSeg.c: 33: output_lowA(0b00100000|0b00000100);
   987  000C86  0E24               	movlw	36
   988  000C88  ECDA  F006         	call	_output_lowA
   989                           
   990                           ;sevenSeg.c: 34: output_lowE(0b00000001);
   991  000C8C  0E01               	movlw	1
   992  000C8E  ECD5  F006         	call	_output_lowE
   993                           
   994                           ;sevenSeg.c: 35: output_highE(0b00000100);
   995  000C92  0E04               	movlw	4
   996  000C94  ECED  F006         	call	_output_highE
   997                           
   998                           ;sevenSeg.c: 36: LATD=tabela[valor];
   999  000C98  5010               	movf	printDigit4@valor,w,c
  1000  000C9A  0D01               	mullw	1
  1001  000C9C  0E01               	movlw	low _tabela
  1002  000C9E  24F3               	addwf	prodl,w,c
  1003  000CA0  6EF6               	movwf	tblptrl,c
  1004  000CA2  0E08               	movlw	high _tabela
  1005  000CA4  20F4               	addwfc	prodh,w,c
  1006  000CA6  6EF7               	movwf	tblptrh,c
  1007  000CA8                     	if	0	;There are less than 3 active tblptr bytes
  1008  000CA8                     	endif
  1009  000CA8  0008               	tblrd		*
  1010  000CAA  CFF5 FF8C          	movff	tablat,3980	;volatile
  1011  000CAE  0012               	return		;funcret
  1012  000CB0                     __end_of_printDigit4:
  1013                           	opt stack 0
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           prodh	equ	0xFF4
  1019                           prodl	equ	0xFF3
  1020                           intcon	equ	0xFF2
  1021                           wreg	equ	0xFE8
  1022                           status	equ	0xFD8
  1023                           
  1024 ;; *************** function _printDigit3 *****************
  1025 ;; Defined at:
  1026 ;;		line 26 in file "sevenSeg.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  valor           1    wreg     unsigned char 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  valor           1   15[COMRAM] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1040 ;;      Params:         0       0       0       0       0       0       0       0       0
  1041 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1043 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1044 ;;Total ram usage:        1 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    2
  1047 ;; This function calls:
  1048 ;;		_output_highE
  1049 ;;		_output_lowA
  1050 ;;		_output_lowE
  1051 ;; This function is called by:
  1052 ;;		_printDisplays
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text7
  1057  000CB0                     __ptext7:
  1058                           	opt stack 0
  1059  000CB0                     _printDigit3:
  1060                           	opt stack 27
  1061                           
  1062                           ;incstack = 0
  1063                           ;printDigit3@valor stored from wreg
  1064  000CB0  6E10               	movwf	printDigit3@valor,c
  1065                           
  1066                           ;sevenSeg.c: 27: output_lowA(0b00100000|0b00000100);
  1067  000CB2  0E24               	movlw	36
  1068  000CB4  ECDA  F006         	call	_output_lowA
  1069                           
  1070                           ;sevenSeg.c: 28: output_highE(0b00000001);
  1071  000CB8  0E01               	movlw	1
  1072  000CBA  ECED  F006         	call	_output_highE
  1073                           
  1074                           ;sevenSeg.c: 29: output_lowE(0b00000100);
  1075  000CBE  0E04               	movlw	4
  1076  000CC0  ECD5  F006         	call	_output_lowE
  1077                           
  1078                           ;sevenSeg.c: 30: LATD=tabela[valor];
  1079  000CC4  5010               	movf	printDigit3@valor,w,c
  1080  000CC6  0D01               	mullw	1
  1081  000CC8  0E01               	movlw	low _tabela
  1082  000CCA  24F3               	addwf	prodl,w,c
  1083  000CCC  6EF6               	movwf	tblptrl,c
  1084  000CCE  0E08               	movlw	high _tabela
  1085  000CD0  20F4               	addwfc	prodh,w,c
  1086  000CD2  6EF7               	movwf	tblptrh,c
  1087  000CD4                     	if	0	;There are less than 3 active tblptr bytes
  1088  000CD4                     	endif
  1089  000CD4  0008               	tblrd		*
  1090  000CD6  CFF5 FF8C          	movff	tablat,3980	;volatile
  1091  000CDA  0012               	return		;funcret
  1092  000CDC                     __end_of_printDigit3:
  1093                           	opt stack 0
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           prodh	equ	0xFF4
  1099                           prodl	equ	0xFF3
  1100                           intcon	equ	0xFF2
  1101                           wreg	equ	0xFE8
  1102                           status	equ	0xFD8
  1103                           
  1104 ;; *************** function _output_highE *****************
  1105 ;; Defined at:
  1106 ;;		line 80 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  outputs         1    wreg     unsigned char 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  outputs         1   14[COMRAM] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0
  1121 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1123 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1124 ;;Total ram usage:        1 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_printDigit3
  1131 ;;		_printDigit4
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text8
  1136  000DDA                     __ptext8:
  1137                           	opt stack 0
  1138  000DDA                     _output_highE:
  1139                           	opt stack 27
  1140                           
  1141                           ;incstack = 0
  1142                           ;output_highE@outputs stored from wreg
  1143  000DDA  6E0F               	movwf	output_highE@outputs,c
  1144                           
  1145                           ;configIO.c: 81: LATE |= outputs;
  1146  000DDC  500F               	movf	output_highE@outputs,w,c
  1147  000DDE  128D               	iorwf	3981,f,c	;volatile
  1148  000DE0  0012               	return		;funcret
  1149  000DE2                     __end_of_output_highE:
  1150                           	opt stack 0
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           prodh	equ	0xFF4
  1156                           prodl	equ	0xFF3
  1157                           intcon	equ	0xFF2
  1158                           wreg	equ	0xFE8
  1159                           status	equ	0xFD8
  1160                           
  1161 ;; *************** function _printDigit2 *****************
  1162 ;; Defined at:
  1163 ;;		line 20 in file "sevenSeg.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  valor           1    wreg     unsigned char 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  valor           1   15[COMRAM] unsigned char 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1177 ;;      Params:         0       0       0       0       0       0       0       0       0
  1178 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1180 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1181 ;;Total ram usage:        1 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    2
  1184 ;; This function calls:
  1185 ;;		_output_highA
  1186 ;;		_output_lowA
  1187 ;;		_output_lowE
  1188 ;; This function is called by:
  1189 ;;		_printDisplays
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text9
  1194  000CDC                     __ptext9:
  1195                           	opt stack 0
  1196  000CDC                     _printDigit2:
  1197                           	opt stack 27
  1198                           
  1199                           ;incstack = 0
  1200                           ;printDigit2@valor stored from wreg
  1201  000CDC  6E10               	movwf	printDigit2@valor,c
  1202                           
  1203                           ;sevenSeg.c: 21: output_lowA(0b00100000);
  1204  000CDE  0E20               	movlw	32
  1205  000CE0  ECDA  F006         	call	_output_lowA
  1206                           
  1207                           ;sevenSeg.c: 22: output_highA(0b00000100);
  1208  000CE4  0E04               	movlw	4
  1209  000CE6  ECF1  F006         	call	_output_highA
  1210                           
  1211                           ;sevenSeg.c: 23: output_lowE(0b00000001|0b00000100);
  1212  000CEA  0E05               	movlw	5
  1213  000CEC  ECD5  F006         	call	_output_lowE
  1214                           
  1215                           ;sevenSeg.c: 24: LATD=tabela[valor];
  1216  000CF0  5010               	movf	printDigit2@valor,w,c
  1217  000CF2  0D01               	mullw	1
  1218  000CF4  0E01               	movlw	low _tabela
  1219  000CF6  24F3               	addwf	prodl,w,c
  1220  000CF8  6EF6               	movwf	tblptrl,c
  1221  000CFA  0E08               	movlw	high _tabela
  1222  000CFC  20F4               	addwfc	prodh,w,c
  1223  000CFE  6EF7               	movwf	tblptrh,c
  1224  000D00                     	if	0	;There are less than 3 active tblptr bytes
  1225  000D00                     	endif
  1226  000D00  0008               	tblrd		*
  1227  000D02  CFF5 FF8C          	movff	tablat,3980	;volatile
  1228  000D06  0012               	return		;funcret
  1229  000D08                     __end_of_printDigit2:
  1230                           	opt stack 0
  1231                           tblptru	equ	0xFF8
  1232                           tblptrh	equ	0xFF7
  1233                           tblptrl	equ	0xFF6
  1234                           tablat	equ	0xFF5
  1235                           prodh	equ	0xFF4
  1236                           prodl	equ	0xFF3
  1237                           intcon	equ	0xFF2
  1238                           wreg	equ	0xFE8
  1239                           status	equ	0xFD8
  1240                           
  1241 ;; *************** function _printDigit1 *****************
  1242 ;; Defined at:
  1243 ;;		line 13 in file "sevenSeg.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  valor           1    wreg     unsigned char 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  valor           1   15[COMRAM] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1257 ;;      Params:         0       0       0       0       0       0       0       0       0
  1258 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1260 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1261 ;;Total ram usage:        1 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    2
  1264 ;; This function calls:
  1265 ;;		_output_highA
  1266 ;;		_output_lowA
  1267 ;;		_output_lowE
  1268 ;; This function is called by:
  1269 ;;		_printDisplays
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text10
  1274  000D08                     __ptext10:
  1275                           	opt stack 0
  1276  000D08                     _printDigit1:
  1277                           	opt stack 27
  1278                           
  1279                           ;incstack = 0
  1280                           ;printDigit1@valor stored from wreg
  1281  000D08  6E10               	movwf	printDigit1@valor,c
  1282                           
  1283                           ;sevenSeg.c: 14: output_highA(0b00100000);
  1284  000D0A  0E20               	movlw	32
  1285  000D0C  ECF1  F006         	call	_output_highA
  1286                           
  1287                           ;sevenSeg.c: 15: output_lowA(0b00000100);
  1288  000D10  0E04               	movlw	4
  1289  000D12  ECDA  F006         	call	_output_lowA
  1290                           
  1291                           ;sevenSeg.c: 16: output_lowE(0b00000001|0b00000100);
  1292  000D16  0E05               	movlw	5
  1293  000D18  ECD5  F006         	call	_output_lowE
  1294                           
  1295                           ;sevenSeg.c: 17: LATD=tabela[valor];
  1296  000D1C  5010               	movf	printDigit1@valor,w,c
  1297  000D1E  0D01               	mullw	1
  1298  000D20  0E01               	movlw	low _tabela
  1299  000D22  24F3               	addwf	prodl,w,c
  1300  000D24  6EF6               	movwf	tblptrl,c
  1301  000D26  0E08               	movlw	high _tabela
  1302  000D28  20F4               	addwfc	prodh,w,c
  1303  000D2A  6EF7               	movwf	tblptrh,c
  1304  000D2C                     	if	0	;There are less than 3 active tblptr bytes
  1305  000D2C                     	endif
  1306  000D2C  0008               	tblrd		*
  1307  000D2E  CFF5 FF8C          	movff	tablat,3980	;volatile
  1308  000D32  0012               	return		;funcret
  1309  000D34                     __end_of_printDigit1:
  1310                           	opt stack 0
  1311                           tblptru	equ	0xFF8
  1312                           tblptrh	equ	0xFF7
  1313                           tblptrl	equ	0xFF6
  1314                           tablat	equ	0xFF5
  1315                           prodh	equ	0xFF4
  1316                           prodl	equ	0xFF3
  1317                           intcon	equ	0xFF2
  1318                           wreg	equ	0xFE8
  1319                           status	equ	0xFD8
  1320                           
  1321 ;; *************** function _output_lowE *****************
  1322 ;; Defined at:
  1323 ;;		line 64 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  outputs         1    wreg     unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  outputs         1   14[COMRAM] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0
  1338 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1340 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1341 ;;Total ram usage:        1 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    1
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_printDigit1
  1348 ;;		_printDigit2
  1349 ;;		_printDigit3
  1350 ;;		_printDigit4
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text11
  1355  000DAA                     __ptext11:
  1356                           	opt stack 0
  1357  000DAA                     _output_lowE:
  1358                           	opt stack 27
  1359                           
  1360                           ;incstack = 0
  1361                           ;output_lowE@outputs stored from wreg
  1362  000DAA  6E0F               	movwf	output_lowE@outputs,c
  1363                           
  1364                           ;configIO.c: 65: LATE&=~outputs;
  1365  000DAC  500F               	movf	output_lowE@outputs,w,c
  1366  000DAE  0AFF               	xorlw	255
  1367  000DB0  168D               	andwf	3981,f,c	;volatile
  1368  000DB2  0012               	return		;funcret
  1369  000DB4                     __end_of_output_lowE:
  1370                           	opt stack 0
  1371                           tblptru	equ	0xFF8
  1372                           tblptrh	equ	0xFF7
  1373                           tblptrl	equ	0xFF6
  1374                           tablat	equ	0xFF5
  1375                           prodh	equ	0xFF4
  1376                           prodl	equ	0xFF3
  1377                           intcon	equ	0xFF2
  1378                           wreg	equ	0xFE8
  1379                           status	equ	0xFD8
  1380                           
  1381 ;; *************** function _output_lowA *****************
  1382 ;; Defined at:
  1383 ;;		line 52 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  outputs         1    wreg     unsigned char 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  outputs         1   14[COMRAM] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1397 ;;      Params:         0       0       0       0       0       0       0       0       0
  1398 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1400 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1401 ;;Total ram usage:        1 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:    1
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_printDigit1
  1408 ;;		_printDigit2
  1409 ;;		_printDigit3
  1410 ;;		_printDigit4
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text12
  1415  000DB4                     __ptext12:
  1416                           	opt stack 0
  1417  000DB4                     _output_lowA:
  1418                           	opt stack 27
  1419                           
  1420                           ;incstack = 0
  1421                           ;output_lowA@outputs stored from wreg
  1422  000DB4  6E0F               	movwf	output_lowA@outputs,c
  1423                           
  1424                           ;configIO.c: 53: LATA &= ~outputs;
  1425  000DB6  500F               	movf	output_lowA@outputs,w,c
  1426  000DB8  0AFF               	xorlw	255
  1427  000DBA  1689               	andwf	3977,f,c	;volatile
  1428  000DBC  0012               	return		;funcret
  1429  000DBE                     __end_of_output_lowA:
  1430                           	opt stack 0
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           prodh	equ	0xFF4
  1436                           prodl	equ	0xFF3
  1437                           intcon	equ	0xFF2
  1438                           wreg	equ	0xFE8
  1439                           status	equ	0xFD8
  1440                           
  1441 ;; *************** function _output_highA *****************
  1442 ;; Defined at:
  1443 ;;		line 68 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  outputs         1    wreg     unsigned char 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  outputs         1   14[COMRAM] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1457 ;;      Params:         0       0       0       0       0       0       0       0       0
  1458 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1460 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1461 ;;Total ram usage:        1 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    1
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_printDigit1
  1468 ;;		_printDigit2
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text13
  1473  000DE2                     __ptext13:
  1474                           	opt stack 0
  1475  000DE2                     _output_highA:
  1476                           	opt stack 27
  1477                           
  1478                           ;incstack = 0
  1479                           ;output_highA@outputs stored from wreg
  1480  000DE2  6E0F               	movwf	output_highA@outputs,c
  1481                           
  1482                           ;configIO.c: 69: LATA |= outputs;
  1483  000DE4  500F               	movf	output_highA@outputs,w,c
  1484  000DE6  1289               	iorwf	3977,f,c	;volatile
  1485  000DE8  0012               	return		;funcret
  1486  000DEA                     __end_of_output_highA:
  1487                           	opt stack 0
  1488                           tblptru	equ	0xFF8
  1489                           tblptrh	equ	0xFF7
  1490                           tblptrl	equ	0xFF6
  1491                           tablat	equ	0xFF5
  1492                           prodh	equ	0xFF4
  1493                           prodl	equ	0xFF3
  1494                           intcon	equ	0xFF2
  1495                           wreg	equ	0xFE8
  1496                           status	equ	0xFD8
  1497                           
  1498 ;; *************** function ___lwmod *****************
  1499 ;; Defined at:
  1500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  dividend        2   14[COMRAM] unsigned int 
  1503 ;;  divisor         2   16[COMRAM] unsigned int 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  counter         1   18[COMRAM] unsigned char 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  2   14[COMRAM] unsigned int 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1515 ;;      Params:         4       0       0       0       0       0       0       0       0
  1516 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1518 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1519 ;;Total ram usage:        5 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    1
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_printDisplays
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text14
  1530  000C42                     __ptext14:
  1531                           	opt stack 0
  1532  000C42                     ___lwmod:
  1533                           	opt stack 28
  1534                           
  1535                           ;incstack = 0
  1536  000C42  5011               	movf	___lwmod@divisor,w,c
  1537  000C44  1012               	iorwf	___lwmod@divisor+1,w,c
  1538  000C46  B4D8               	btfsc	status,2,c
  1539  000C48  D018               	goto	l666
  1540  000C4A  0E01               	movlw	1
  1541  000C4C  6E13               	movwf	___lwmod@counter,c
  1542  000C4E  D004               	goto	l1151
  1543  000C50                     l1149:
  1544  000C50  90D8               	bcf	status,0,c
  1545  000C52  3611               	rlcf	___lwmod@divisor,f,c
  1546  000C54  3612               	rlcf	___lwmod@divisor+1,f,c
  1547  000C56  2A13               	incf	___lwmod@counter,f,c
  1548  000C58                     l1151:
  1549  000C58  AE12               	btfss	___lwmod@divisor+1,7,c
  1550  000C5A  D7FA               	goto	l1149
  1551  000C5C                     l1153:
  1552  000C5C  5011               	movf	___lwmod@divisor,w,c
  1553  000C5E  5C0F               	subwf	___lwmod@dividend,w,c
  1554  000C60  5012               	movf	___lwmod@divisor+1,w,c
  1555  000C62  5810               	subwfb	___lwmod@dividend+1,w,c
  1556  000C64  A0D8               	btfss	status,0,c
  1557  000C66  D004               	goto	l1157
  1558  000C68  5011               	movf	___lwmod@divisor,w,c
  1559  000C6A  5E0F               	subwf	___lwmod@dividend,f,c
  1560  000C6C  5012               	movf	___lwmod@divisor+1,w,c
  1561  000C6E  5A10               	subwfb	___lwmod@dividend+1,f,c
  1562  000C70                     l1157:
  1563  000C70  90D8               	bcf	status,0,c
  1564  000C72  3212               	rrcf	___lwmod@divisor+1,f,c
  1565  000C74  3211               	rrcf	___lwmod@divisor,f,c
  1566  000C76  2E13               	decfsz	___lwmod@counter,f,c
  1567  000C78  D7F1               	goto	l1153
  1568  000C7A                     l666:
  1569  000C7A  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  1570  000C7E  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  1571  000C82  0012               	return		;funcret
  1572  000C84                     __end_of___lwmod:
  1573                           	opt stack 0
  1574                           tblptru	equ	0xFF8
  1575                           tblptrh	equ	0xFF7
  1576                           tblptrl	equ	0xFF6
  1577                           tablat	equ	0xFF5
  1578                           prodh	equ	0xFF4
  1579                           prodl	equ	0xFF3
  1580                           intcon	equ	0xFF2
  1581                           wreg	equ	0xFE8
  1582                           status	equ	0xFD8
  1583                           
  1584 ;; *************** function ___lwdiv *****************
  1585 ;; Defined at:
  1586 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  dividend        2   19[COMRAM] unsigned int 
  1589 ;;  divisor         2   21[COMRAM] unsigned int 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  quotient        2   23[COMRAM] unsigned int 
  1592 ;;  counter         1   25[COMRAM] unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  2   19[COMRAM] unsigned int 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1602 ;;      Params:         4       0       0       0       0       0       0       0       0
  1603 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1605 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1606 ;;Total ram usage:        7 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    1
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_printDisplays
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text15
  1617  000BF0                     __ptext15:
  1618                           	opt stack 0
  1619  000BF0                     ___lwdiv:
  1620                           	opt stack 28
  1621                           
  1622                           ;incstack = 0
  1623  000BF0  0E00               	movlw	0
  1624  000BF2  6E19               	movwf	___lwdiv@quotient+1,c
  1625  000BF4  0E00               	movlw	0
  1626  000BF6  6E18               	movwf	___lwdiv@quotient,c
  1627  000BF8  5016               	movf	___lwdiv@divisor,w,c
  1628  000BFA  1017               	iorwf	___lwdiv@divisor+1,w,c
  1629  000BFC  B4D8               	btfsc	status,2,c
  1630  000BFE  D01C               	goto	l656
  1631  000C00  0E01               	movlw	1
  1632  000C02  6E1A               	movwf	___lwdiv@counter,c
  1633  000C04  D004               	goto	l1131
  1634  000C06                     l1129:
  1635  000C06  90D8               	bcf	status,0,c
  1636  000C08  3616               	rlcf	___lwdiv@divisor,f,c
  1637  000C0A  3617               	rlcf	___lwdiv@divisor+1,f,c
  1638  000C0C  2A1A               	incf	___lwdiv@counter,f,c
  1639  000C0E                     l1131:
  1640  000C0E  AE17               	btfss	___lwdiv@divisor+1,7,c
  1641  000C10  D7FA               	goto	l1129
  1642  000C12                     l1133:
  1643  000C12  90D8               	bcf	status,0,c
  1644  000C14  3618               	rlcf	___lwdiv@quotient,f,c
  1645  000C16  3619               	rlcf	___lwdiv@quotient+1,f,c
  1646  000C18  5016               	movf	___lwdiv@divisor,w,c
  1647  000C1A  5C14               	subwf	___lwdiv@dividend,w,c
  1648  000C1C  5017               	movf	___lwdiv@divisor+1,w,c
  1649  000C1E  5815               	subwfb	___lwdiv@dividend+1,w,c
  1650  000C20  A0D8               	btfss	status,0,c
  1651  000C22  D005               	goto	l1141
  1652  000C24  5016               	movf	___lwdiv@divisor,w,c
  1653  000C26  5E14               	subwf	___lwdiv@dividend,f,c
  1654  000C28  5017               	movf	___lwdiv@divisor+1,w,c
  1655  000C2A  5A15               	subwfb	___lwdiv@dividend+1,f,c
  1656  000C2C  8018               	bsf	___lwdiv@quotient,0,c
  1657  000C2E                     l1141:
  1658  000C2E  90D8               	bcf	status,0,c
  1659  000C30  3217               	rrcf	___lwdiv@divisor+1,f,c
  1660  000C32  3216               	rrcf	___lwdiv@divisor,f,c
  1661  000C34  2E1A               	decfsz	___lwdiv@counter,f,c
  1662  000C36  D7ED               	goto	l1133
  1663  000C38                     l656:
  1664  000C38  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  1665  000C3C  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1666  000C40  0012               	return		;funcret
  1667  000C42                     __end_of___lwdiv:
  1668                           	opt stack 0
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           prodh	equ	0xFF4
  1674                           prodl	equ	0xFF3
  1675                           intcon	equ	0xFF2
  1676                           wreg	equ	0xFE8
  1677                           status	equ	0xFD8
  1678                           
  1679 ;; *************** function _output_highD *****************
  1680 ;; Defined at:
  1681 ;;		line 77 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  outputs         1    wreg     unsigned char 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  outputs         1   14[COMRAM] unsigned char 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1695 ;;      Params:         0       0       0       0       0       0       0       0       0
  1696 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1698 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1699 ;;Total ram usage:        1 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text16
  1710  000DEA                     __ptext16:
  1711                           	opt stack 0
  1712  000DEA                     _output_highD:
  1713                           	opt stack 29
  1714                           
  1715                           ;incstack = 0
  1716                           ;output_highD@outputs stored from wreg
  1717  000DEA  6E0F               	movwf	output_highD@outputs,c
  1718                           
  1719                           ;configIO.c: 78: LATD |= outputs;
  1720  000DEC  500F               	movf	output_highD@outputs,w,c
  1721  000DEE  128C               	iorwf	3980,f,c	;volatile
  1722  000DF0  0012               	return		;funcret
  1723  000DF2                     __end_of_output_highD:
  1724                           	opt stack 0
  1725                           tblptru	equ	0xFF8
  1726                           tblptrh	equ	0xFF7
  1727                           tblptrl	equ	0xFF6
  1728                           tablat	equ	0xFF5
  1729                           prodh	equ	0xFF4
  1730                           prodl	equ	0xFF3
  1731                           intcon	equ	0xFF2
  1732                           wreg	equ	0xFE8
  1733                           status	equ	0xFD8
  1734                           
  1735 ;; *************** function _output_highC *****************
  1736 ;; Defined at:
  1737 ;;		line 74 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  outputs         1    wreg     unsigned char 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  outputs         1   14[COMRAM] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0
  1752 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1754 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1755 ;;Total ram usage:        1 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text17
  1766  000DF2                     __ptext17:
  1767                           	opt stack 0
  1768  000DF2                     _output_highC:
  1769                           	opt stack 29
  1770                           
  1771                           ;incstack = 0
  1772                           ;output_highC@outputs stored from wreg
  1773  000DF2  6E0F               	movwf	output_highC@outputs,c
  1774                           
  1775                           ;configIO.c: 75: LATC |= outputs;
  1776  000DF4  500F               	movf	output_highC@outputs,w,c
  1777  000DF6  128B               	iorwf	3979,f,c	;volatile
  1778  000DF8  0012               	return		;funcret
  1779  000DFA                     __end_of_output_highC:
  1780                           	opt stack 0
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           prodh	equ	0xFF4
  1786                           prodl	equ	0xFF3
  1787                           intcon	equ	0xFF2
  1788                           wreg	equ	0xFE8
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function _enableTimer0ISR *****************
  1792 ;; Defined at:
  1793 ;;		line 33 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/timer0lib.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		None
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1807 ;;      Params:         0       0       0       0       0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text18
  1822  000DFA                     __ptext18:
  1823                           	opt stack 0
  1824  000DFA                     _enableTimer0ISR:
  1825                           	opt stack 29
  1826                           
  1827                           ;timer0lib.c: 35: T0IE=1;
  1828                           
  1829                           ;incstack = 0
  1830  000DFA  8AF2               	bsf	intcon,5,c	;volatile
  1831                           
  1832                           ;timer0lib.c: 36: TMR0IF=0;
  1833  000DFC  94F2               	bcf	intcon,2,c	;volatile
  1834  000DFE  0012               	return		;funcret
  1835  000E00                     __end_of_enableTimer0ISR:
  1836                           	opt stack 0
  1837                           tblptru	equ	0xFF8
  1838                           tblptrh	equ	0xFF7
  1839                           tblptrl	equ	0xFF6
  1840                           tablat	equ	0xFF5
  1841                           prodh	equ	0xFF4
  1842                           prodl	equ	0xFF3
  1843                           intcon	equ	0xFF2
  1844                           wreg	equ	0xFE8
  1845                           status	equ	0xFD8
  1846                           
  1847 ;; *************** function _desableTimer0ISR *****************
  1848 ;; Defined at:
  1849 ;;		line 38 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/timer0lib.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		None
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1863 ;;      Params:         0       0       0       0       0       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1866 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1867 ;;Total ram usage:        0 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    1
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text19
  1878  000E00                     __ptext19:
  1879                           	opt stack 0
  1880  000E00                     _desableTimer0ISR:
  1881                           	opt stack 29
  1882                           
  1883                           ;timer0lib.c: 40: T0IE=0;
  1884                           
  1885                           ;incstack = 0
  1886  000E00  9AF2               	bcf	intcon,5,c	;volatile
  1887  000E02  0012               	return		;funcret
  1888  000E04                     __end_of_desableTimer0ISR:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           intcon	equ	0xFF2
  1897                           wreg	equ	0xFE8
  1898                           status	equ	0xFD8
  1899                           
  1900 ;; *************** function _configTimer0 *****************
  1901 ;; Defined at:
  1902 ;;		line 13 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/timer0lib.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  prescalerVal    1    wreg     unsigned char 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  prescalerVal    1   14[COMRAM] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0
  1917 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1919 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1920 ;;Total ram usage:        1 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    1
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text20
  1931  000D54                     __ptext20:
  1932                           	opt stack 0
  1933  000D54                     _configTimer0:
  1934                           	opt stack 29
  1935                           
  1936                           ;incstack = 0
  1937                           ;configTimer0@prescalerValue stored from wreg
  1938  000D54  6E0F               	movwf	configTimer0@prescalerValue,c
  1939                           
  1940                           ;timer0lib.c: 15: T0CS=0;
  1941  000D56  9AD5               	bcf	4053,5,c	;volatile
  1942                           
  1943                           ;timer0lib.c: 16: PSA = 0;
  1944  000D58  96D5               	bcf	4053,3,c	;volatile
  1945                           
  1946                           ;timer0lib.c: 17: T0CON=T0CON&0b11111000;
  1947  000D5A  50D5               	movf	4053,w,c	;volatile
  1948  000D5C  0BF8               	andlw	248
  1949  000D5E  6ED5               	movwf	4053,c	;volatile
  1950                           
  1951                           ;timer0lib.c: 18: T0CON=(T0CON|prescalerValue);
  1952  000D60  50D5               	movf	4053,w,c	;volatile
  1953  000D62  100F               	iorwf	configTimer0@prescalerValue,w,c
  1954  000D64  6ED5               	movwf	4053,c	;volatile
  1955                           
  1956                           ;timer0lib.c: 19: TMR0ON=1;
  1957  000D66  8ED5               	bsf	4053,7,c	;volatile
  1958  000D68  0012               	return		;funcret
  1959  000D6A                     __end_of_configTimer0:
  1960                           	opt stack 0
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           prodh	equ	0xFF4
  1966                           prodl	equ	0xFF3
  1967                           intcon	equ	0xFF2
  1968                           wreg	equ	0xFE8
  1969                           status	equ	0xFD8
  1970                           
  1971 ;; *************** function _configSevenSeg *****************
  1972 ;; Defined at:
  1973 ;;		line 38 in file "sevenSeg.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1990 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1991 ;;Total ram usage:        0 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    2
  1994 ;; This function calls:
  1995 ;;		_setOutputA
  1996 ;;		_setOutputE
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text21
  2003  000D7E                     __ptext21:
  2004                           	opt stack 0
  2005  000D7E                     _configSevenSeg:
  2006                           	opt stack 28
  2007                           
  2008                           ;sevenSeg.c: 39: setOutputA(0b00100000|0b00000100);
  2009                           
  2010                           ;incstack = 0
  2011  000D7E  0E24               	movlw	36
  2012  000D80  ECE4  F006         	call	_setOutputA
  2013                           
  2014                           ;sevenSeg.c: 40: setOutputE(0b00000001|0b00000100);
  2015  000D84  0E05               	movlw	5
  2016  000D86  ECDF  F006         	call	_setOutputE
  2017  000D8A  0012               	return		;funcret
  2018  000D8C                     __end_of_configSevenSeg:
  2019                           	opt stack 0
  2020                           tblptru	equ	0xFF8
  2021                           tblptrh	equ	0xFF7
  2022                           tblptrl	equ	0xFF6
  2023                           tablat	equ	0xFF5
  2024                           prodh	equ	0xFF4
  2025                           prodl	equ	0xFF3
  2026                           intcon	equ	0xFF2
  2027                           wreg	equ	0xFE8
  2028                           status	equ	0xFD8
  2029                           
  2030 ;; *************** function _setOutputE *****************
  2031 ;; Defined at:
  2032 ;;		line 27 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  outputs         1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  outputs         1   14[COMRAM] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0
  2047 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2049 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    1
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_configSevenSeg
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text22
  2061  000DBE                     __ptext22:
  2062                           	opt stack 0
  2063  000DBE                     _setOutputE:
  2064                           	opt stack 28
  2065                           
  2066                           ;incstack = 0
  2067                           ;setOutputE@outputs stored from wreg
  2068  000DBE  6E0F               	movwf	setOutputE@outputs,c
  2069                           
  2070                           ;configIO.c: 28: TRISE &= ~outputs;
  2071  000DC0  500F               	movf	setOutputE@outputs,w,c
  2072  000DC2  0AFF               	xorlw	255
  2073  000DC4  1696               	andwf	3990,f,c	;volatile
  2074  000DC6  0012               	return		;funcret
  2075  000DC8                     __end_of_setOutputE:
  2076                           	opt stack 0
  2077                           tblptru	equ	0xFF8
  2078                           tblptrh	equ	0xFF7
  2079                           tblptrl	equ	0xFF6
  2080                           tablat	equ	0xFF5
  2081                           prodh	equ	0xFF4
  2082                           prodl	equ	0xFF3
  2083                           intcon	equ	0xFF2
  2084                           wreg	equ	0xFE8
  2085                           status	equ	0xFD8
  2086                           
  2087 ;; *************** function _setOutputA *****************
  2088 ;; Defined at:
  2089 ;;		line 15 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/configIO.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  outputs         1    wreg     unsigned char 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  outputs         1   14[COMRAM] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2103 ;;      Params:         0       0       0       0       0       0       0       0       0
  2104 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2106 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2107 ;;Total ram usage:        1 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_configSevenSeg
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text23
  2118  000DC8                     __ptext23:
  2119                           	opt stack 0
  2120  000DC8                     _setOutputA:
  2121                           	opt stack 28
  2122                           
  2123                           ;incstack = 0
  2124                           ;setOutputA@outputs stored from wreg
  2125  000DC8  6E0F               	movwf	setOutputA@outputs,c
  2126                           
  2127                           ;configIO.c: 16: TRISA &= ~outputs;
  2128  000DCA  500F               	movf	setOutputA@outputs,w,c
  2129  000DCC  0AFF               	xorlw	255
  2130  000DCE  1692               	andwf	3986,f,c	;volatile
  2131  000DD0  0012               	return		;funcret
  2132  000DD2                     __end_of_setOutputA:
  2133                           	opt stack 0
  2134                           tblptru	equ	0xFF8
  2135                           tblptrh	equ	0xFF7
  2136                           tblptrl	equ	0xFF6
  2137                           tablat	equ	0xFF5
  2138                           prodh	equ	0xFF4
  2139                           prodl	equ	0xFF3
  2140                           intcon	equ	0xFF2
  2141                           wreg	equ	0xFE8
  2142                           status	equ	0xFD8
  2143                           
  2144 ;; *************** function _adcRead *****************
  2145 ;; Defined at:
  2146 ;;		line 27 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/adclib.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  channel         1    wreg     unsigned char 
  2149 ;;  resultFormat    1   14[COMRAM] unsigned char 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  channel         1   22[COMRAM] unsigned char 
  2152 ;;  returnValue     2   20[COMRAM] unsigned int 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2   14[COMRAM] unsigned int 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2162 ;;      Params:         2       0       0       0       0       0       0       0       0
  2163 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2164 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2165 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2166 ;;Total ram usage:        9 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_main
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text24
  2177  000A4C                     __ptext24:
  2178                           	opt stack 0
  2179  000A4C                     _adcRead:
  2180                           	opt stack 29
  2181                           
  2182                           ;incstack = 0
  2183                           ;adcRead@channel stored from wreg
  2184  000A4C  6E17               	movwf	adcRead@channel,c
  2185                           
  2186                           ;adclib.c: 28: unsigned int returnValue=0;
  2187  000A4E  0E00               	movlw	0
  2188  000A50  6E16               	movwf	adcRead@returnValue+1,c
  2189  000A52  0E00               	movlw	0
  2190  000A54  6E15               	movwf	adcRead@returnValue,c
  2191                           
  2192                           ;adclib.c: 29: if(channel>7)
  2193  000A56  0E07               	movlw	7
  2194  000A58  6417               	cpfsgt	adcRead@channel,c
  2195  000A5A  D005               	goto	l1175
  2196                           
  2197                           ;adclib.c: 30: {
  2198                           ;adclib.c: 31: return 0;
  2199  000A5C  0E00               	movlw	0
  2200  000A5E  6E10               	movwf	?_adcRead+1,c
  2201  000A60  0E00               	movlw	0
  2202  000A62  6E0F               	movwf	?_adcRead,c
  2203  000A64  0012               	return	
  2204  000A66                     l1175:
  2205                           
  2206                           ;adclib.c: 32: }
  2207                           ;adclib.c: 33: ADCON0&=0b11000011;
  2208  000A66  0EC3               	movlw	195
  2209  000A68  16C2               	andwf	4034,f,c	;volatile
  2210                           
  2211                           ;adclib.c: 34: ADCON0|=(channel<<2);
  2212  000A6A  4417               	rlncf	adcRead@channel,w,c
  2213  000A6C  46E8               	rlncf	wreg,f,c
  2214  000A6E  0BFC               	andlw	252
  2215  000A70  12C2               	iorwf	4034,f,c	;volatile
  2216                           
  2217                           ;adclib.c: 35: ADCON2&=0b01111111;
  2218  000A72  9EC0               	bcf	4032,7,c	;volatile
  2219                           
  2220                           ;adclib.c: 36: ADCON2|=(resultFormat);
  2221  000A74  500F               	movf	adcRead@resultFormat,w,c
  2222  000A76  12C0               	iorwf	4032,f,c	;volatile
  2223                           
  2224                           ;adclib.c: 37: ADON=1;
  2225  000A78  80C2               	bsf	4034,0,c	;volatile
  2226                           
  2227                           ;adclib.c: 38: _delay(80);
  2228  000A7A  0E1A               	movlw	26
  2229  000A7C                     u477:
  2230  000A7C  2EE8               	decfsz	wreg,f,c
  2231  000A7E  D7FE               	goto	u477
  2232  000A80  D000               	nop2		;nop
  2233                           
  2234                           ;adclib.c: 40: GO_nDONE=1;
  2235  000A82  82C2               	bsf	4034,1,c	;volatile
  2236  000A84                     l28:
  2237  000A84  B2C2               	btfsc	4034,1,c	;volatile
  2238  000A86  D7FE               	goto	l28
  2239                           
  2240                           ;adclib.c: 43: if(resultFormat==0b10000000)
  2241  000A88  0E80               	movlw	128
  2242  000A8A  180F               	xorwf	adcRead@resultFormat,w,c
  2243  000A8C  A4D8               	btfss	status,2,c
  2244  000A8E  D00B               	goto	l1191
  2245                           
  2246                           ;adclib.c: 44: returnValue= (ADRESH<<8)|ADRESL;
  2247  000A90  50C3               	movf	4035,w,c	;volatile
  2248  000A92  CFC4 F011          	movff	4036,??_adcRead	;volatile
  2249  000A96  6A12               	clrf	(??_adcRead+1)& (0+255),c
  2250  000A98  C011  F012         	movff	??_adcRead,??_adcRead+1
  2251  000A9C  6A11               	clrf	??_adcRead,c
  2252  000A9E  1011               	iorwf	??_adcRead,w,c
  2253  000AA0  6E15               	movwf	adcRead@returnValue,c
  2254  000AA2  5012               	movf	??_adcRead+1,w,c
  2255  000AA4  D018               	goto	L1
  2256  000AA6                     l1191:
  2257                           
  2258                           ;adclib.c: 45: else if(resultFormat==0b00000000)
  2259  000AA6  500F               	movf	adcRead@resultFormat,w,c
  2260  000AA8  A4D8               	btfss	status,2,c
  2261  000AAA  D016               	goto	l1195
  2262                           
  2263                           ;adclib.c: 46: returnValue=(ADRESH<<2)|(ADRESL>>6);
  2264  000AAC  CFC3 F011          	movff	4035,??_adcRead	;volatile
  2265  000AB0  0E06               	movlw	6
  2266  000AB2  6E12               	movwf	(??_adcRead+1)& (0+255),c
  2267  000AB4                     u335:
  2268  000AB4  90D8               	bcf	status,0,c
  2269  000AB6  3211               	rrcf	??_adcRead,f,c
  2270  000AB8  2E12               	decfsz	(??_adcRead+1)& (0+255),f,c
  2271  000ABA  D7FC               	goto	u335
  2272  000ABC  5011               	movf	??_adcRead,w,c
  2273  000ABE  CFC4 F013          	movff	4036,??_adcRead+2	;volatile
  2274  000AC2  6A14               	clrf	(??_adcRead+3)& (0+255),c
  2275  000AC4  90D8               	bcf	status,0,c
  2276  000AC6  3613               	rlcf	??_adcRead+2,f,c
  2277  000AC8  3614               	rlcf	??_adcRead+3,f,c
  2278  000ACA  90D8               	bcf	status,0,c
  2279  000ACC  3613               	rlcf	??_adcRead+2,f,c
  2280  000ACE  3614               	rlcf	??_adcRead+3,f,c
  2281  000AD0  1013               	iorwf	??_adcRead+2,w,c
  2282  000AD2  6E15               	movwf	adcRead@returnValue,c
  2283  000AD4  5014               	movf	??_adcRead+3,w,c
  2284  000AD6                     L1:
  2285  000AD6  6E16               	movwf	adcRead@returnValue+1,c
  2286  000AD8                     l1195:
  2287                           
  2288                           ;adclib.c: 47: return returnValue;
  2289  000AD8  C015  F00F         	movff	adcRead@returnValue,?_adcRead
  2290  000ADC  C016  F010         	movff	adcRead@returnValue+1,?_adcRead+1
  2291  000AE0  0012               	return	
  2292  000AE2                     __end_of_adcRead:
  2293                           	opt stack 0
  2294                           tblptru	equ	0xFF8
  2295                           tblptrh	equ	0xFF7
  2296                           tblptrl	equ	0xFF6
  2297                           tablat	equ	0xFF5
  2298                           prodh	equ	0xFF4
  2299                           prodl	equ	0xFF3
  2300                           intcon	equ	0xFF2
  2301                           wreg	equ	0xFE8
  2302                           status	equ	0xFD8
  2303                           
  2304 ;; *************** function _adcConfig *****************
  2305 ;; Defined at:
  2306 ;;		line 11 in file "../../Downloads/minicurso-pic-master/dia03/desafio_adc/adclib.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  conversionRa    1    wreg     unsigned char 
  2309 ;;  acqTime         1   14[COMRAM] unsigned char 
  2310 ;;  portConfig      1   15[COMRAM] unsigned char 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  conversionRa    1   16[COMRAM] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2322 ;;      Params:         2       0       0       0       0       0       0       0       0
  2323 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2325 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2326 ;;Total ram usage:        3 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    1
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_main
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text25
  2337  000D34                     __ptext25:
  2338                           	opt stack 0
  2339  000D34                     _adcConfig:
  2340                           	opt stack 29
  2341                           
  2342                           ;incstack = 0
  2343                           ;adcConfig@conversionRate stored from wreg
  2344  000D34  6E11               	movwf	adcConfig@conversionRate,c
  2345                           
  2346                           ;adclib.c: 13: ADCON2&=0b11111000;
  2347  000D36  0EF8               	movlw	248
  2348  000D38  16C0               	andwf	4032,f,c	;volatile
  2349                           
  2350                           ;adclib.c: 14: ADCON2|=conversionRate;
  2351  000D3A  5011               	movf	adcConfig@conversionRate,w,c
  2352  000D3C  12C0               	iorwf	4032,f,c	;volatile
  2353                           
  2354                           ;adclib.c: 16: ADCON2&=0b11000111;
  2355  000D3E  0EC7               	movlw	199
  2356  000D40  16C0               	andwf	4032,f,c	;volatile
  2357                           
  2358                           ;adclib.c: 17: ADCON2|=acqTime;
  2359  000D42  500F               	movf	adcConfig@acqTime,w,c
  2360  000D44  12C0               	iorwf	4032,f,c	;volatile
  2361                           
  2362                           ;adclib.c: 20: ADCON1&=0b11110000;
  2363  000D46  0EF0               	movlw	240
  2364  000D48  16C1               	andwf	4033,f,c	;volatile
  2365                           
  2366                           ;adclib.c: 21: ADCON1|=portConfig;
  2367  000D4A  5010               	movf	adcConfig@portConfig,w,c
  2368  000D4C  12C1               	iorwf	4033,f,c	;volatile
  2369                           
  2370                           ;adclib.c: 22: VCFG1=0;
  2371  000D4E  9AC1               	bcf	4033,5,c	;volatile
  2372                           
  2373                           ;adclib.c: 23: VCFG0=0;
  2374  000D50  98C1               	bcf	4033,4,c	;volatile
  2375  000D52  0012               	return		;funcret
  2376  000D54                     __end_of_adcConfig:
  2377                           	opt stack 0
  2378                           tblptru	equ	0xFF8
  2379                           tblptrh	equ	0xFF7
  2380                           tblptrl	equ	0xFF6
  2381                           tablat	equ	0xFF5
  2382                           prodh	equ	0xFF4
  2383                           prodl	equ	0xFF3
  2384                           intcon	equ	0xFF2
  2385                           wreg	equ	0xFE8
  2386                           status	equ	0xFD8
  2387                           
  2388 ;; *************** function _ISR *****************
  2389 ;; Defined at:
  2390 ;;		line 12 in file "main.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2404 ;;      Params:         0       0       0       0       0       0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2406 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2407 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2408 ;;Total ram usage:       14 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		Interrupt level 2
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	intcode
  2418  000008                     __pintcode:
  2419                           	opt stack 0
  2420  000008                     _ISR:
  2421                           	opt stack 27
  2422                           
  2423                           ;incstack = 0
  2424  000008  8225               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2425  00000A  CFFA F001          	movff	pclath,??_ISR
  2426  00000E  CFFB F002          	movff	pclatu,??_ISR+1
  2427  000012  ED71  F005         	call	int_func,f	;refresh shadow registers
  2428                           pclatu	equ	0xFFB
  2429                           pclath	equ	0xFFA
  2430                           tblptru	equ	0xFF8
  2431                           tblptrh	equ	0xFF7
  2432                           tblptrl	equ	0xFF6
  2433                           tablat	equ	0xFF5
  2434                           prodh	equ	0xFF4
  2435                           prodl	equ	0xFF3
  2436                           intcon	equ	0xFF2
  2437                           wreg	equ	0xFE8
  2438                           status	equ	0xFD8
  2439                           
  2440                           	psect	intcode_body
  2441  000AE2                     __pintcode_body:
  2442                           	opt stack 27
  2443  000AE2                     int_func:
  2444                           	opt stack 27
  2445  000AE2  0006               	pop		; remove dummy address from shadow register refresh
  2446  000AE4  CFE9 F003          	movff	fsr0l,??_ISR+2
  2447  000AE8  CFEA F004          	movff	fsr0h,??_ISR+3
  2448  000AEC  CFE1 F005          	movff	fsr1l,??_ISR+4
  2449  000AF0  CFE2 F006          	movff	fsr1h,??_ISR+5
  2450  000AF4  CFD9 F007          	movff	fsr2l,??_ISR+6
  2451  000AF8  CFDA F008          	movff	fsr2h,??_ISR+7
  2452  000AFC  CFF3 F009          	movff	prodl,??_ISR+8
  2453  000B00  CFF4 F00A          	movff	prodh,??_ISR+9
  2454  000B04  CFF6 F00B          	movff	tblptrl,??_ISR+10
  2455  000B08  CFF7 F00C          	movff	tblptrh,??_ISR+11
  2456  000B0C  CFF8 F00D          	movff	tblptru,??_ISR+12
  2457  000B10  CFF5 F00E          	movff	tablat,??_ISR+13
  2458                           
  2459                           ;main.c: 13: if (T0IF) {
  2460  000B14  A4F2               	btfss	intcon,2,c	;volatile
  2461  000B16  D00D               	goto	i2l202
  2462                           
  2463                           ;main.c: 14: T0IF = 0;
  2464  000B18  94F2               	bcf	intcon,2,c	;volatile
  2465                           
  2466                           ;main.c: 15: contador++;
  2467  000B1A  2A24               	incf	_contador,f,c
  2468                           
  2469                           ;main.c: 16: if (contador == 61) {
  2470  000B1C  0E3D               	movlw	61
  2471  000B1E  1824               	xorwf	_contador,w,c
  2472  000B20  A4D8               	btfss	status,2,c
  2473  000B22  D007               	goto	i2l202
  2474                           
  2475                           ;main.c: 17: LATC7 = ~LATC7;
  2476  000B24  BE8B               	btfsc	3979,7,c	;volatile
  2477  000B26  D002               	goto	i2u20_40
  2478  000B28  8E8B               	bsf	3979,7,c	;volatile
  2479  000B2A  D001               	goto	i2l1073
  2480  000B2C                     i2u20_40:
  2481  000B2C  9E8B               	bcf	3979,7,c	;volatile
  2482  000B2E                     i2l1073:
  2483                           
  2484                           ;main.c: 18: contador = 0x00;
  2485  000B2E  0E00               	movlw	0
  2486  000B30  6E24               	movwf	_contador,c
  2487  000B32                     i2l202:
  2488  000B32  C00E  FFF5         	movff	??_ISR+13,tablat
  2489  000B36  C00D  FFF8         	movff	??_ISR+12,tblptru
  2490  000B3A  C00C  FFF7         	movff	??_ISR+11,tblptrh
  2491  000B3E  C00B  FFF6         	movff	??_ISR+10,tblptrl
  2492  000B42  C00A  FFF4         	movff	??_ISR+9,prodh
  2493  000B46  C009  FFF3         	movff	??_ISR+8,prodl
  2494  000B4A  C008  FFDA         	movff	??_ISR+7,fsr2h
  2495  000B4E  C007  FFD9         	movff	??_ISR+6,fsr2l
  2496  000B52  C006  FFE2         	movff	??_ISR+5,fsr1h
  2497  000B56  C005  FFE1         	movff	??_ISR+4,fsr1l
  2498  000B5A  C004  FFEA         	movff	??_ISR+3,fsr0h
  2499  000B5E  C003  FFE9         	movff	??_ISR+2,fsr0l
  2500  000B62  C002  FFFB         	movff	??_ISR+1,pclatu
  2501  000B66  C001  FFFA         	movff	??_ISR,pclath
  2502  000B6A  9225               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2503  000B6C  0011               	retfie		f
  2504  000B6E                     __end_of_ISR:
  2505                           	opt stack 0
  2506                           pclatu	equ	0xFFB
  2507                           pclath	equ	0xFFA
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           prodh	equ	0xFF4
  2513                           prodl	equ	0xFF3
  2514                           intcon	equ	0xFF2
  2515                           fsr0h	equ	0xFEA
  2516                           fsr0l	equ	0xFE9
  2517                           wreg	equ	0xFE8
  2518                           fsr1h	equ	0xFE2
  2519                           fsr1l	equ	0xFE1
  2520                           fsr2h	equ	0xFDA
  2521                           fsr2l	equ	0xFD9
  2522                           status	equ	0xFD8
  2523                           pclatu	equ	0xFFB
  2524                           pclath	equ	0xFFA
  2525                           tblptru	equ	0xFF8
  2526                           tblptrh	equ	0xFF7
  2527                           tblptrl	equ	0xFF6
  2528                           tablat	equ	0xFF5
  2529                           prodh	equ	0xFF4
  2530                           prodl	equ	0xFF3
  2531                           intcon	equ	0xFF2
  2532                           fsr0h	equ	0xFEA
  2533                           fsr0l	equ	0xFE9
  2534                           wreg	equ	0xFE8
  2535                           fsr1h	equ	0xFE2
  2536                           fsr1l	equ	0xFE1
  2537                           fsr2h	equ	0xFDA
  2538                           fsr2l	equ	0xFD9
  2539                           status	equ	0xFD8
  2540                           
  2541                           	psect	rparam
  2542  0000                     pclatu	equ	0xFFB
  2543                           pclath	equ	0xFFA
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodh	equ	0xFF4
  2549                           prodl	equ	0xFF3
  2550                           intcon	equ	0xFF2
  2551                           fsr0h	equ	0xFEA
  2552                           fsr0l	equ	0xFE9
  2553                           wreg	equ	0xFE8
  2554                           fsr1h	equ	0xFE2
  2555                           fsr1l	equ	0xFE1
  2556                           fsr2h	equ	0xFDA
  2557                           fsr2l	equ	0xFD9
  2558                           status	equ	0xFD8
  2559                           
  2560                           	psect	temp
  2561  000025                     btemp:
  2562                           	opt stack 0
  2563  000025                     	ds	1
  2564  0000                     int$flags	set	btemp
  2565                           pclatu	equ	0xFFB
  2566                           pclath	equ	0xFFA
  2567                           tblptru	equ	0xFF8
  2568                           tblptrh	equ	0xFF7
  2569                           tblptrl	equ	0xFF6
  2570                           tablat	equ	0xFF5
  2571                           prodh	equ	0xFF4
  2572                           prodl	equ	0xFF3
  2573                           intcon	equ	0xFF2
  2574                           fsr0h	equ	0xFEA
  2575                           fsr0l	equ	0xFE9
  2576                           wreg	equ	0xFE8
  2577                           fsr1h	equ	0xFE2
  2578                           fsr1l	equ	0xFE1
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      36
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_printDisplays
    _printDisplays->___lwdiv
    _printDigit4->_output_highE
    _printDigit4->_output_lowA
    _printDigit4->_output_lowE
    _printDigit3->_output_highE
    _printDigit3->_output_lowA
    _printDigit3->_output_lowE
    _printDigit2->_output_highA
    _printDigit2->_output_lowA
    _printDigit2->_output_lowE
    _printDigit1->_output_highA
    _printDigit1->_output_lowA
    _printDigit1->_output_lowE
    ___lwdiv->___lwmod
    _configSevenSeg->_setOutputA
    _configSevenSeg->_setOutputE

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3170
                                             33 COMRAM     2     2      0
                          _adcConfig
                            _adcRead
                     _configSevenSeg
                       _configTimer0
                   _desableTimer0ISR
                    _enableTimer0ISR
                       _output_highC
                       _output_highD
                      _printDisplays
                        _resetTimer0
                          _setInputA
                         _setOutputC
                         _setOutputD
 ---------------------------------------------------------------------------------
 (1) _setOutputD                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setOutputC                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setInputA                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printDisplays                                       11     9      2    2674
                                             26 COMRAM     7     5      2
                            ___lwdiv
                            ___lwmod
                        _printDigit1
                        _printDigit2
                        _printDigit3
                        _printDigit4
 ---------------------------------------------------------------------------------
 (2) _printDigit4                                          1     1      0      88
                                             15 COMRAM     1     1      0
                       _output_highE
                        _output_lowA
                        _output_lowE
 ---------------------------------------------------------------------------------
 (2) _printDigit3                                          1     1      0      88
                                             15 COMRAM     1     1      0
                       _output_highE
                        _output_lowA
                        _output_lowE
 ---------------------------------------------------------------------------------
 (3) _output_highE                                         1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _printDigit2                                          1     1      0      88
                                             15 COMRAM     1     1      0
                       _output_highA
                        _output_lowA
                        _output_lowE
 ---------------------------------------------------------------------------------
 (2) _printDigit1                                          1     1      0      88
                                             15 COMRAM     1     1      0
                       _output_highA
                        _output_lowA
                        _output_lowE
 ---------------------------------------------------------------------------------
 (3) _output_lowE                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _output_lowA                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _output_highA                                         1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1019
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     678
                                             19 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _output_highD                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _output_highC                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _enableTimer0ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _desableTimer0ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configTimer0                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configSevenSeg                                       0     0      0      30
                         _setOutputA
                         _setOutputE
 ---------------------------------------------------------------------------------
 (2) _setOutputE                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setOutputA                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              9     7      2     178
                                             14 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _adcConfig                                            3     1      2     152
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcConfig
   _adcRead
   _configSevenSeg
     _setOutputA
     _setOutputE
   _configTimer0
   _desableTimer0ISR
   _enableTimer0ISR
   _output_highC
   _output_highD
   _printDisplays
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _printDigit1
       _output_highA
       _output_lowA
       _output_lowE
     _printDigit2
       _output_highA
       _output_lowA
       _output_lowE
     _printDigit3
       _output_highE
       _output_lowA
       _output_lowE
     _printDigit4
       _output_highE
       _output_lowA
       _output_lowE
   _resetTimer0
   _setInputA
   _setOutputC
   _setOutputD

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      24       1       38.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      24      20        0.0%
DATA                 0      0      24       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu Sep 05 23:27:19 2019

                        l28 0A84          printDisplays@valor 001B                 __CFG_BOR$ON 000000  
               __CFG_BORV$3 000000                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000                 __CFG_LVP$ON 000000  
                       l205 0BB6                         l656 0C38                         l666 0C7A  
                       _GIE 007F97                __CFG_CPB$OFF 000000                         u350 082C  
                       u335 0AB4                         u417 0858                         u370 0888  
              __CFG_CPD$OFF 000000                         u427 08D0                         _ISR 0008  
                       u437 090C                         u447 0994                         u457 09EC  
                       u467 0A28                         u477 0A7C                         _PSA 007EAB  
                       wreg 000FE8                __CFG_FOSC$HS 000000                        ?_ISR 0001  
              __CFG_WDT$OFF 000000                        l1131 0C0E                        l1203 0820  
                      l1141 0C2E                        l1133 0C12                        l1213 087C  
                      l1151 0C58                        l1129 0C06                        l1153 0C5C  
                      l1157 0C70                        l1149 0C50                        l1229 0930  
                      l1191 0AA6                        l1175 0A66                        l1265 0BE4  
                      l1195 0AD8                        _ADON 007E10                        _T0IE 007F95  
                      _T0IF 007F92                        _T0CS 007EAD                        _LATA 000F89  
                      _LATB 000F8A                        _LATC 000F8B                        _LATD 000F8C  
                      _LATE 000F8D                        _TMR0 000FD6              ??_configTimer0 000F  
               _output_lowA 0DB4                 _output_lowE 0DAA       __size_of_output_highA 0008  
     __size_of_output_highC 0008       __size_of_output_highD 0008       __size_of_output_highE 0008  
                      _main 0B6E                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr0l 000FE9                        fsr2h 000FDA                        fsr1l 000FE1  
                      fsr2l 000FD9                        btemp 0025                        pclat 000FFA  
                      prodh 000FF4                        prodl 000FF3                        start 0016  
             __CFG_IESO$OFF 000000            printDigit1@valor 0010            printDigit2@valor 0010  
          printDigit3@valor 0010            printDigit4@valor 0010                ___param_bank 000010  
           ??_printDisplays 001D                       ??_ISR 0001             _enableTimer0ISR 0DFA  
             __CFG_PLLDIV$1 000000           _printDisplays$800 0020           _printDisplays$801 001E  
            __CFG_CCP2MX$ON 000000                       ?_main 0001             __end_of_adcRead 0AE2  
                     _T0CON 000FD5                       _LATC7 007C5F             __end_of___lwdiv 0C42  
           __end_of___lwmod 0C84                       i2l202 0B32                       _VCFG0 007E0C  
                     _VCFG1 007E0D                       _PORTB 000F81               __CFG_USBDIV$1 000000  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96               __CFG_PWRT$OFF 000000  
             __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000  
             __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
             __CFG_WRTB$OFF 000000                _output_highA 0DE2                _output_highC 0DF2  
              _output_highD 0DEA                _output_highE 0DDA               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000     adcConfig@conversionRate 0011  
                     tablat 000FF5                       status 000FD8              __CFG_ICPRT$OFF 000000  
            __CFG_PBADEN$ON 000000              __CFG_MCLRE$OFF 000000             __initialization 0D6A  
              __end_of_main 0BF0                      ??_main 0022               __activetblptr 000001  
                    _ADCON0 000FC2                      _ADCON1 000FC1                      _ADCON2 000FC0  
                    _ADRESH 000FC4                      _ADRESL 000FC3   __size_of_desableTimer0ISR 0004  
                    i2l1073 0B2E                      _TMR0IF 007F92                      _TMR0ON 007EAF  
              ?_resetTimer0 0001     __end_of_enableTimer0ISR 0E00              __CFG_XINST$OFF 000000  
          ??_configSevenSeg 0010                   ??_adcRead 0011              __CFG_STVREN$ON 000000  
                 ??___lwdiv 0018                   ??___lwmod 0013                      _tabela 0801  
      __end_of_configTimer0 0D6A                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                ?_printDigit1 0001  
              ?_printDigit2 0001                ?_printDigit3 0001                ?_printDigit4 0001  
        __size_of_adcConfig 0020                  __accesstop 0060         output_highA@outputs 000F  
   __end_of__initialization 0D6C               ___rparam_used 000001         output_highC@outputs 000F  
       output_highD@outputs 000F         output_highE@outputs 000F              __pcstackCOMRAM 0001  
              ?_output_lowA 0001                ?_output_lowE 0001            ?_enableTimer0ISR 0001  
        __size_of_setInputA 0008           __end_of_adcConfig 0D54                     i2u20_40 0B2C  
          _desableTimer0ISR 0E00             __CFG_VREGEN$OFF 000000                     __Hparam 0000  
                   __Lparam 0000        __size_of_resetTimer0 000A                     _adcRead 0A4C  
     __size_of_configTimer0 0016                     ___lwdiv 0BF0       __end_of_printDisplays 0A4C  
                   ___lwmod 0C42                __psmallconst 0800                     __pcinit 0D6A  
       adcConfig@portConfig 0010                     __ramtop 0800                     __ptext0 0B6E  
                   __ptext1 0D8C                     __ptext2 0D96                     __ptext3 0DD2  
                   __ptext4 0DA0                     __ptext5 080C                     __ptext6 0C84  
                   __ptext7 0CB0                     __ptext8 0DDA                     __ptext9 0CDC  
              __size_of_ISR 0B66              __pintcode_body 0AE2        __size_of_printDigit1 002C  
      __size_of_printDigit2 002C        __size_of_printDigit3 002C        __size_of_printDigit4 002C  
      end_of_initialization 0D6C           __end_of_setInputA 0DDA                     int_func 0AE2  
              _configTimer0 0D54                  _setOutputA 0DC8                  _setOutputC 0D96  
                _setOutputD 0D8C                  _setOutputE 0DBE        __size_of_output_lowA 000A  
      __size_of_output_lowE 000A              __end_of_tabela 080B         start_initialization 0D6A  
               __end_of_ISR 0B6E                 ?_setOutputA 0001                 ?_setOutputC 0001  
               ?_setOutputD 0001                 ?_setOutputE 0001              adcRead@channel 0017  
          __CFG_LPT1OSC$OFF 000000    __end_of_desableTimer0ISR 0E04                   _adcConfig 0D34  
   __size_of_configSevenSeg 000E                 __pbssCOMRAM 0024               ?_output_highA 0001  
             ?_output_highC 0001               ?_output_highD 0001               ?_output_highE 0001  
          ___lwdiv@dividend 0014                   __pintcode 0008                    ?_adcRead 000F  
                  ?___lwdiv 0014                    ?___lwmod 000F    __size_of_enableTimer0ISR 0006  
                ?_adcConfig 000F                 __smallconst 0800              ??_output_highA 000F  
            ??_output_highC 000F              ??_output_highD 000F              ??_output_highE 000F  
       __size_of_setOutputA 000A         __size_of_setOutputC 000A         __size_of_setOutputD 000A  
       __size_of_setOutputE 000A            ___lwdiv@quotient 0018               ??_resetTimer0 000F  
       adcRead@resultFormat 000F             setInputA@inputs 000F                   _setInputA 0DD2  
                  _GO_nDONE 007E11            __CFG_WDTPS$32768 000000                   main@valor 0022  
             ??_printDigit1 0010               ??_printDigit2 0010               ??_printDigit3 0010  
             ??_printDigit4 0010            adcConfig@acqTime 000F  configTimer0@prescalerValue 000F  
    __size_of_printDisplays 0240                  ?_setInputA 0001                    __Hrparam 0000  
                  __Lrparam 0000                __Lsmallconst 0800         __end_of_resetTimer0 0DAA  
          __size_of_adcRead 0096            __size_of___lwdiv 0052            __size_of___lwmod 0042  
               ??_adcConfig 0011              _configSevenSeg 0D7E           ??_enableTimer0ISR 000F  
           ___lwdiv@divisor 0016             ___lwdiv@counter 001A                    __ptext10 0D08  
                  __ptext11 0DAA                    __ptext20 0D54                    __ptext12 0DB4  
                  __ptext21 0D7E                    __ptext13 0DE2                    __ptext22 0DBE  
                  __ptext14 0C42                    __ptext23 0DC8                    __ptext15 0BF0  
                  __ptext24 0A4C                    __ptext16 0DEA                    __ptext25 0D34  
                  __ptext17 0DF2                    __ptext18 0DFA                    __ptext19 0E00  
                  _contador 0024               ??_output_lowA 000F               ??_output_lowE 000F  
       __end_of_printDigit1 0D34         __end_of_printDigit2 0D08         __end_of_printDigit3 0CDC  
       __end_of_printDigit4 0CB0               __size_of_main 0082                ??_setOutputA 000F  
              ??_setOutputC 000F                ??_setOutputD 000F                ??_setOutputE 000F  
      __end_of_output_highA 0DEA        __end_of_output_highC 0DFA        __end_of_output_highD 0DF2  
      __end_of_output_highE 0DE2          adcRead@returnValue 0015                    int$flags 0025  
             _printDisplays 080C           ?_desableTimer0ISR 0001          output_lowA@outputs 000F  
    __end_of_configSevenSeg 0D8C       __CFG_CPUDIV$OSC1_PLL2 000000          ??_desableTimer0ISR 000F  
        output_lowE@outputs 000F          __end_of_setOutputA 0DD2          __end_of_setOutputC 0DA0  
        __end_of_setOutputD 0D96          __end_of_setOutputE 0DC8                    intlevel2 0000  
          ___lwmod@dividend 000F                 ??_setInputA 000F                 _resetTimer0 0DA0  
         setOutputA@outputs 000F         __end_of_output_lowA 0DBE         __end_of_output_lowE 0DB4  
         setOutputC@outputs 000F           setOutputD@outputs 000F              ?_printDisplays 001B  
         setOutputE@outputs 000F             ?_configSevenSeg 0001             ___lwmod@divisor 0011  
           ___lwmod@counter 0013                 _printDigit1 0D08                 _printDigit2 0CDC  
               _printDigit3 0CB0                 _printDigit4 0C84               ?_configTimer0 0001  
